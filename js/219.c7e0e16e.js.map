{"version":3,"file":"js/219.c7e0e16e.js","mappings":"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","sources":["webpack://vue_script/./src/scan-template/ sync nonrecursive \\.json$","webpack://vue_script/./src/views/ReportTemplate.vue","webpack://vue_script/./node_modules/marked/lib/marked.esm.js","webpack://vue_script/./node_modules/dompurify/dist/purify.es.mjs","webpack://vue_script/./src/views/ReportTemplate.vue?6989"],"sourcesContent":["var map = {\n\t\"./compliance_audit.json\": 8989,\n\t\"./management_summary.json\": 1066,\n\t\"./standard_technical_report.json\": 1006\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 1519;","<template>\n  <div class=\"report-template-view\">\n    <!-- ========== 头部 ========== -->\n    <div class=\"header-section\">\n      <div class=\"header-content\">\n        <div class=\"title-container\">\n          <i class=\"fas fa-file-alt\"></i>\n          <h1>报告模板管理</h1>\n        </div>\n        <p class=\"subtitle\">创建、编辑和管理您的安全扫描报告模板</p>\n      </div>\n      <div class=\"header-decoration\">\n        <div class=\"decoration-item\"></div>\n        <div class=\"decoration-item\"></div>\n        <div class=\"decoration-item\"></div>\n      </div>\n    </div>\n\n    <!-- ========== 操作按钮 ========== -->\n    <div class=\"action-section\">\n      <el-button type=\"primary\" class=\"action-button\" @click=\"createNewTemplate\">\n        <i class=\"fas fa-plus\"></i> 创建新模板\n      </el-button>\n      <el-button class=\"action-button secondary\" @click=\"importTemplate\">\n        <i class=\"fas fa-file-import\"></i> 导入模板\n      </el-button>\n      <el-button class=\"action-button tertiary\" @click=\"exportAllTemplates\">\n        <i class=\"fas fa-file-export\"></i> 批量导出\n      </el-button>\n      <input\n          type=\"file\"\n          ref=\"fileInput\"\n          style=\"display: none\"\n          accept=\".json\"\n          @change=\"handleFileImport\"\n      >\n    </div>\n\n    <!-- 加载状态 -->\n    <div v-if=\"loading\" class=\"loading-overlay\">\n      <div class=\"loading-content\">\n        <i class=\"fas fa-spinner fa-spin\"></i>\n        <span>加载模板中...</span>\n      </div>\n    </div>\n\n    <!-- ========== 模板列表 ========== -->\n    <div class=\"template-list\">\n      <div\n          class=\"template-card\"\n          v-for=\"template in templates\"\n          :key=\"template.id\"\n          :class=\"{ 'default-template': template.isDefault }\"\n      >\n        <div class=\"card-header\">\n          <div class=\"template-meta\">\n            <span class=\"template-name\">{{ template.name }}</span>\n            <span v-if=\"template.isDefault\" class=\"default-badge\">\n              <i class=\"fas fa-star\"></i> 默认模板\n            </span>\n          </div>\n\n          <div class=\"template-actions\">\n            <el-tooltip effect=\"dark\" content=\"导出模板\" placement=\"top\">\n              <el-button circle @click=\"exportTemplate(template)\">\n                <i class=\"fas fa-download\"></i>\n              </el-button>\n            </el-tooltip>\n\n            <el-tooltip effect=\"dark\" content=\"编辑模板\" placement=\"top\">\n              <el-button circle @click=\"editTemplate(template)\">\n                <i class=\"fas fa-edit\"></i>\n              </el-button>\n            </el-tooltip>\n\n            <el-tooltip\n                effect=\"dark\"\n                :content=\"template.isDefault ? '已是默认模板' : '设为默认模板'\"\n                placement=\"top\"\n            >\n              <el-button\n                  circle\n                  :type=\"template.isDefault ? 'success' : ''\"\n                  @click=\"setAsDefault(template)\"\n              >\n                <i class=\"fas\" :class=\"template.isDefault ? 'fa-check' : 'fa-star'\"></i>\n              </el-button>\n            </el-tooltip>\n\n            <el-tooltip effect=\"dark\" content=\"删除模板\" placement=\"top\">\n              <el-button circle type=\"danger\" @click=\"deleteTemplate(template)\">\n                <i class=\"fas fa-trash\"></i>\n              </el-button>\n            </el-tooltip>\n          </div>\n        </div>\n\n        <div class=\"template-preview\">\n          <div class=\"preview-content\" v-html=\"template.preview\"></div>\n        </div>\n\n        <div class=\"card-footer\">\n          <div class=\"footer-info\">\n            <span class=\"create-date\">\n              <i class=\"fas fa-calendar-alt\"></i> 创建于: {{ template.created }}\n            </span>\n            <span class=\"template-id\">\n              <i class=\"fas fa-fingerprint\"></i> ID: {{ template.id }}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      <!-- 添加新模板卡片 -->\n      <div class=\"template-card add-new\" @click=\"createNewTemplate\">\n        <div class=\"add-new-content\">\n          <i class=\"fas fa-plus-circle\"></i>\n          <span>添加新模板</span>\n        </div>\n      </div>\n    </div>\n\n    <!-- ========== 模板编辑对话框 ========== -->\n    <el-dialog\n        v-model=\"editorVisible\"\n        :title=\"editorTitle\"\n        width=\"80%\"\n        custom-class=\"template-editor-dialog\"\n    >\n      <div class=\"template-editor-container\">\n        <!-- ====== 顶部输入 ====== -->\n        <div class=\"editor-header\">\n          <el-input v-model=\"currentTemplate.name\" placeholder=\"模板名称\" />\n          <el-switch\n              v-model=\"currentTemplate.isDefault\"\n              active-text=\"设为默认模板\"\n              inactive-text=\"\"\n          />\n        </div>\n\n        <!-- ====== 工具栏 ====== -->\n        <div class=\"editor-toolbar\">\n          <div class=\"toolbar-left\">\n            <!-- 粗斜下 -->\n            <el-button-group>\n              <el-tooltip effect=\"dark\" content=\"加粗\" placement=\"top\">\n                <el-button @click=\"makeBold\">\n                  <i class=\"fas fa-bold\"></i>\n                </el-button>\n              </el-tooltip>\n              <el-tooltip effect=\"dark\" content=\"斜体\" placement=\"top\">\n                <el-button @click=\"makeItalic\">\n                  <i class=\"fas fa-italic\"></i>\n                </el-button>\n              </el-tooltip>\n              <el-tooltip effect=\"dark\" content=\"下划线\" placement=\"top\">\n                <el-button @click=\"makeUnderline\">\n                  <i class=\"fas fa-underline\"></i>\n                </el-button>\n              </el-tooltip>\n            </el-button-group>\n\n            <!-- 列表 -->\n            <el-button-group>\n              <el-tooltip effect=\"dark\" content=\"无序列表\" placement=\"top\">\n                <el-button @click=\"makeUnorderedList\">\n                  <i class=\"fas fa-list-ul\"></i>\n                </el-button>\n              </el-tooltip>\n              <el-tooltip effect=\"dark\" content=\"有序列表\" placement=\"top\">\n                <el-button @click=\"makeOrderedList\">\n                  <i class=\"fas fa-list-ol\"></i>\n                </el-button>\n              </el-tooltip>\n            </el-button-group>\n\n            <!-- 链接 / 图片 -->\n            <el-button-group>\n              <el-tooltip effect=\"dark\" content=\"插入链接\" placement=\"top\">\n                <el-button @click=\"insertLink\">\n                  <i class=\"fas fa-link\"></i>\n                </el-button>\n              </el-tooltip>\n              <el-tooltip effect=\"dark\" content=\"插入图片\" placement=\"top\">\n                <el-button @click=\"insertImage\">\n                  <i class=\"fas fa-image\"></i>\n                </el-button>\n              </el-tooltip>\n            </el-button-group>\n          </div>\n\n          <!-- 右侧下拉区块 -->\n          <div class=\"toolbar-right\">\n            <el-select\n                v-model=\"selectedSection\"\n                placeholder=\"添加区块\"\n                class=\"section-select\"\n            >\n              <el-option\n                  v-for=\"section in sections\"\n                  :key=\"section.value\"\n                  :label=\"section.label\"\n                  :value=\"section.value\"\n              />\n            </el-select>\n            <el-button type=\"primary\" plain @click=\"insertSection\">\n              <i class=\"fas fa-plus\"></i> 插入区块\n            </el-button>\n          </div>\n        </div>\n\n        <!-- ====== 编辑器 + 预览 ====== -->\n        <div class=\"editor-content\">\n          <textarea\n              ref=\"markdownTextarea\"\n              v-model=\"currentTemplate.content\"\n              class=\"markdown-editor\"\n              placeholder=\"在此输入Markdown格式的报告模板...\"\n          ></textarea>\n\n          <div class=\"preview-pane\">\n            <div class=\"preview-header\">\n              <h4><i class=\"fas fa-eye\"></i> 实时预览</h4>\n            </div>\n            <div class=\"preview-content\">\n              <div v-html=\"renderedContent\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- ====== Dialog 底部按钮 ====== -->\n      <template #footer>\n        <div class=\"dialog-footer\">\n          <el-button @click=\"editorVisible = false\">取消</el-button>\n          <el-button type=\"primary\" @click=\"saveTemplate\">保存模板</el-button>\n        </div>\n      </template>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { ref, reactive, computed, nextTick, onMounted } from 'vue'\nimport { ElMessage, ElMessageBox } from 'element-plus'\nimport { marked } from 'marked'\nimport DOMPurify from 'dompurify'\n\nexport default {\n  setup() {\n    // 报告模板数据\n    const templates = ref([])\n    const loading = ref(false)\n    const fileInput = ref(null)\n\n    // 生成预览HTML\n    const generatePreview = (template) => {\n      return `<div class=\"template-preview-content\">\n        <h3>${template.name || '未命名模板'}</h3>\n        <p>最后更新: ${new Date().toLocaleDateString()}</p>\n        <div class=\"preview-stats\">\n          <span class=\"stat-item\"><i class=\"fas fa-code\"></i> 内容行数: ${(template.content || '').split('\\n').length}</span>\n        </div>\n      </div>`\n    }\n\n    // 使用 require.context 加载模板\n    const loadTemplates = () => {\n      loading.value = true\n      try {\n        const templateContext = require.context(\n            '@/scan-template',\n            false,\n            /\\.json$/\n        )\n\n        templates.value = templateContext.keys()\n            .map(k => templateContext(k))\n            .map(template => ({\n              id: template.id || `tpl-${Date.now()}-${Math.random().toString(36).substr(2, 4)}`,\n              name: template.name,\n              content: template.content,\n              isDefault: template.isDefault || false,\n              created: template.created || new Date().toLocaleDateString(),\n              preview: template.preview || generatePreview(template)\n            }))\n\n        // 确保至少有一个默认模板\n        if (!templates.value.some(t => t.isDefault) && templates.value.length > 0) {\n          templates.value[0].isDefault = true\n        }\n\n      } catch (error) {\n        console.error('加载模板失败:', error)\n        ElMessage.error('加载模板失败: ' + error.message)\n      } finally {\n        loading.value = false\n      }\n    }\n\n    const editorVisible = ref(false)\n    const editorTitle = ref('编辑报告模板')\n\n    const currentTemplate = reactive({\n      id: '',\n      name: '',\n      content: '',\n      isDefault: false,\n      created: '',\n      preview: ''\n    })\n\n    // 解析 Markdown + 清洗\n    const renderedContent = computed(() =>\n        DOMPurify.sanitize(marked.parse(currentTemplate.content || ''))\n    )\n\n    // 区块下拉\n    const sections = ref([\n      { value: 'summary', label: '扫描概述' },\n      { value: 'vulnerabilities', label: '漏洞清单' },\n      { value: 'recommendations', label: '修复建议' },\n      { value: 'risk_levels', label: '风险评级' },\n      { value: 'compliance', label: '合规检查' },\n      { value: 'executive_summary', label: '执行摘要' }\n    ])\n    const selectedSection = ref('')\n\n    /* ========== DOM 引用 ========== */\n    const markdownTextarea = ref(null)\n\n    /* ========== 文本操作助手 ==========\n       根据光标位置/选区，插入或包装 Markdown 语法\n    ================================== */\n    const wrapSelection = (before, after = '') => {\n      const el = markdownTextarea.value\n      if (!el) return\n\n      const start = el.selectionStart\n      const end = el.selectionEnd\n      const original = currentTemplate.content\n\n      const selectedText = original.slice(start, end)\n      const newText = before + selectedText + after\n\n      currentTemplate.content = original.slice(0, start) + newText + original.slice(end)\n\n      // 将光标放回插入后的文本中\n      nextTick(() => {\n        el.focus()\n        el.selectionStart = start + before.length\n        el.selectionEnd = start + before.length + selectedText.length\n      })\n    }\n\n    const prependLines = (prefixCb) => {\n      const el = markdownTextarea.value\n      if (!el) return\n\n      const start = el.selectionStart\n      const end = el.selectionEnd\n      const original = currentTemplate.content\n\n      const beforeSel = original.slice(0, start)\n      const sel = original.slice(start, end)\n      const afterSel = original.slice(end)\n\n      const lines = sel.split('\\n')\n      const newLines = lines.map((l, idx) => prefixCb(idx, l) + l)\n      currentTemplate.content = beforeSel + newLines.join('\\n') + afterSel\n    }\n\n    /* ========== 工具栏行为实现 ========== */\n    const makeBold = () => wrapSelection('**', '**')\n    const makeItalic = () => wrapSelection('_', '_')\n    // Markdown 本身没下划线，用内联 HTML\n    const makeUnderline = () => wrapSelection('<u>', '</u>')\n\n    const makeUnorderedList = () => prependLines(() => '- ')\n    const makeOrderedList = () => prependLines((i) => `${i + 1}. `)\n\n    const insertLink = () => {\n      const url = window.prompt('请输入链接 URL')\n      if (!url) return\n      const text = window.prompt('显示文本（可留空使用 URL）') || url\n      wrapSelection(`[${text}](${url})`)\n    }\n\n    const insertImage = () => {\n      const url = window.prompt('请输入图片 URL')\n      if (!url) return\n      const alt = window.prompt('图片替代文字（alt）') || ''\n      wrapSelection(``)\n    }\n\n    /* ========== 插入区块 ==========\n       按 selectedSection 插入 Markdown 片段\n    ================================== */\n    const sectionSnippets = {\n      summary: `## 扫描概述\\n\\n- 扫描类型: \\n- 扫描范围: \\n- 时间范围: \\n`,\n      vulnerabilities: `## 漏洞清单\\n\\n| ID | 风险 | 描述 |\\n| --- | --- | --- |\\n| VUL-001 | 高 | 示例描述 |\\n`,\n      recommendations: `## 修复建议\\n\\n1. 建议一\\n2. 建议二\\n`,\n      risk_levels: `## 风险评级\\n\\n| 等级 | 说明 |\\n| --- | --- |\\n| 高 | 立即处理 |\\n`,\n      compliance: `## 合规检查\\n\\n- 标准: \\n- 结果: \\n`,\n      executive_summary: `## 执行摘要\\n\\n> 用一句话总结关键风险。\\n`\n    }\n\n    const insertSection = () => {\n      if (!selectedSection.value) {\n        ElMessage.warning('请选择区块类型')\n        return\n      }\n      const snippet = sectionSnippets[selectedSection.value]\n      wrapSelection('\\n' + snippet + '\\n')\n      selectedSection.value = ''\n    }\n\n    /* ========== 模板 CRUD ========== */\n    const createNewTemplate = () => {\n      editorTitle.value = '创建新模板'\n      resetCurrentTemplate()\n      editorVisible.value = true\n    }\n\n    const editTemplate = (tpl) => {\n      editorTitle.value = '编辑模板'\n      Object.assign(currentTemplate, {\n        ...tpl,\n        isDefault: tpl.isDefault // 确保isDefault属性被正确复制\n      })\n      editorVisible.value = true\n      nextTick(() => markdownTextarea.value?.focus())\n    }\n\n    const saveTemplate = () => {\n      if (!currentTemplate.name) {\n        ElMessage.warning('请输入模板名称')\n        return\n      }\n\n      // 更新预览\n      currentTemplate.preview = generatePreview(currentTemplate)\n\n      if (!currentTemplate.id) {\n        // 创建新模板\n        currentTemplate.id = `tpl-${Date.now()}-${Math.random().toString(36).substr(2, 4)}`\n        currentTemplate.created = new Date().toLocaleDateString()\n        templates.value.push({ ...currentTemplate })\n        ElMessage.success('模板创建成功')\n      } else {\n        // 更新现有模板\n        const idx = templates.value.findIndex((t) => t.id === currentTemplate.id)\n        if (idx !== -1) {\n          templates.value[idx] = { ...currentTemplate }\n          ElMessage.success('模板更新成功')\n        }\n      }\n\n      editorVisible.value = false\n    }\n\n    const setAsDefault = (tpl) => {\n      templates.value.forEach(t => {\n        t.isDefault = t.id === tpl.id\n      })\n      ElMessage.success(`已设置\"${tpl.name}\"为默认模板`)\n    }\n\n    const deleteTemplate = (tpl) => {\n      ElMessageBox.confirm(\n          `确定要删除模板\"${tpl.name}\"吗？此操作不可恢复。`,\n          '删除确认',\n          {\n            confirmButtonText: '确认删除',\n            cancelButtonText: '取消',\n            type: 'warning'\n          }\n      ).then(() => {\n        templates.value = templates.value.filter(t => t.id !== tpl.id)\n\n        // 如果删除的是默认模板，且还有剩余模板，设置第一个为默认\n        if (tpl.isDefault && templates.value.length > 0) {\n          templates.value[0].isDefault = true\n        }\n\n        ElMessage.success('模板已删除')\n      }).catch(() => {})\n    }\n\n    // 导出单个模板为JSON文件\n    const exportTemplate = (template) => {\n      // 创建JSON数据\n      const data = JSON.stringify(template, null, 2)\n      const blob = new Blob([data], { type: 'application/json' })\n\n      // 创建下载链接\n      const url = URL.createObjectURL(blob)\n      const a = document.createElement('a')\n      a.href = url\n      a.download = `${template.name.replace(/[^\\w]/g, '_')}_template.json`\n      document.body.appendChild(a)\n      a.click()\n\n      // 清理\n      setTimeout(() => {\n        document.body.removeChild(a)\n        URL.revokeObjectURL(url)\n      }, 100)\n\n      ElMessage.success(`\"${template.name}\"模板已导出`)\n    }\n\n    // 批量导出所有模板\n    const exportAllTemplates = () => {\n      if (templates.value.length === 0) {\n        ElMessage.warning('没有模板可导出')\n        return\n      }\n\n      // 创建JSON数据\n      const data = JSON.stringify(templates.value, null, 2)\n      const blob = new Blob([data], { type: 'application/json' })\n\n      // 创建下载链接\n      const url = URL.createObjectURL(blob)\n      const a = document.createElement('a')\n      a.href = url\n      a.download = `all_templates_${new Date().toISOString().slice(0, 10)}.json`\n      document.body.appendChild(a)\n      a.click()\n\n      // 清理\n      setTimeout(() => {\n        document.body.removeChild(a)\n        URL.revokeObjectURL(url)\n      }, 100)\n\n      ElMessage.success(`已导出${templates.value.length}个模板`)\n    }\n\n    // 导入模板\n    const importTemplate = () => {\n      fileInput.value.click()\n    }\n\n    // 处理文件导入\n    const handleFileImport = (event) => {\n      const file = event.target.files[0]\n      if (!file) return\n\n      const reader = new FileReader()\n      reader.onload = (e) => {\n        try {\n          const content = e.target.result\n          const importedTemplates = JSON.parse(content)\n\n          // 支持导入单个模板或多个模板\n          const templatesToImport = Array.isArray(importedTemplates)\n              ? importedTemplates\n              : [importedTemplates]\n\n          let importedCount = 0\n\n          templatesToImport.forEach(template => {\n            // 基本验证\n            if (!template.name || !template.content) {\n              ElMessage.warning('跳过无效模板: 缺少必要字段')\n              return\n            }\n\n            // 生成唯一ID\n            const newId = `tpl-${Date.now()}-${Math.random().toString(36).substr(2, 4)}`\n\n            // 添加到模板列表\n            templates.value.push({\n              id: newId,\n              name: template.name,\n              content: template.content,\n              isDefault: template.isDefault || false,\n              created: new Date().toLocaleDateString(),\n              preview: generatePreview(template)\n            })\n\n            importedCount++\n          })\n\n          // 重置文件输入\n          event.target.value = ''\n\n          if (importedCount > 0) {\n            ElMessage.success(`成功导入${importedCount}个模板`)\n          }\n\n        } catch (error) {\n          console.error('导入模板失败:', error)\n          ElMessage.error('导入失败: ' + error.message)\n        }\n      }\n\n      reader.readAsText(file)\n    }\n\n    const resetCurrentTemplate = () => {\n      Object.assign(currentTemplate, {\n        id: '',\n        name: '未命名模板',\n        content: '# 报告标题\\n\\n## 章节标题\\n...',\n        isDefault: false,\n        created: '',\n        preview: ''\n      })\n    }\n\n    // 初始化时加载模板\n    onMounted(() => {\n      loadTemplates()\n    })\n\n    /* ========== 导出到模板 ========== */\n    return {\n      templates,\n      editorVisible,\n      editorTitle,\n      currentTemplate,\n      sections,\n      selectedSection,\n      renderedContent,\n      markdownTextarea,\n      fileInput,\n      loading,\n\n      // toolbar\n      makeBold,\n      makeItalic,\n      makeUnderline,\n      makeUnorderedList,\n      makeOrderedList,\n      insertLink,\n      insertImage,\n      insertSection,\n\n      // CRUD\n      createNewTemplate,\n      editTemplate,\n      saveTemplate,\n      setAsDefault,\n      deleteTemplate,\n      exportTemplate,\n      importTemplate,\n      exportAllTemplates,\n      handleFileImport\n    }\n  }\n}\n</script>\n<style scoped>\n/* 基础样式重置 */\n.report-template-view {\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  padding: 2rem;\n  background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);\n  min-height: 100vh;\n  color: #e2e8f0;\n}\n\n/* 头部区域美化 */\n.header-section {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n  position: relative;\n  padding: 1.5rem;\n  background: rgba(15, 23, 42, 0.7);\n  border-radius: 16px;\n  border: 1px solid rgba(100, 116, 139, 0.2);\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);\n}\n\n.header-content {\n  z-index: 2;\n}\n\n.title-container {\n  display: flex;\n  align-items: center;\n  gap: 1rem;\n  margin-bottom: 0.5rem;\n}\n\n.title-container i {\n  font-size: 2.5rem;\n  color: #60a5fa;\n  background: rgba(96, 165, 250, 0.1);\n  width: 60px;\n  height: 60px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\nh1 {\n  font-size: 2.2rem;\n  font-weight: 700;\n  margin: 0;\n  color: #f8fafc;\n  letter-spacing: 0.5px;\n}\n\n.subtitle {\n  font-size: 1.1rem;\n  color: #94a3b8;\n  margin: 0;\n  max-width: 600px;\n  line-height: 1.6;\n}\n\n.header-decoration {\n  position: absolute;\n  right: 2rem;\n  top: 50%;\n  transform: translateY(-50%);\n  display: flex;\n  gap: 1rem;\n}\n\n.decoration-item {\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  background: rgba(96, 165, 250, 0.5);\n}\n\n.decoration-item:nth-child(1) {\n  background: rgba(96, 165, 250, 0.8);\n  width: 16px;\n  height: 16px;\n}\n\n.decoration-item:nth-child(2) {\n  background: rgba(139, 92, 246, 0.6);\n}\n\n.decoration-item:nth-child(3) {\n  background: rgba(52, 211, 153, 0.6);\n}\n\n/* 操作按钮区域美化 */\n.action-section {\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 2rem;\n  flex-wrap: wrap;\n}\n\n.action-button {\n  border-radius: 10px;\n  padding: 0.9rem 1.5rem;\n  font-weight: 600;\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 0.7rem;\n  font-size: 1rem;\n  border: none;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);\n}\n\n.action-button i {\n  font-size: 1.1rem;\n}\n\n.action-button.primary {\n  background: linear-gradient(135deg, #3b82f6, #60a5fa);\n  color: white;\n}\n\n.action-button.primary:hover {\n  background: linear-gradient(135deg, #2563eb, #3b82f6);\n  transform: translateY(-2px);\n  box-shadow: 0 6px 12px rgba(37, 99, 235, 0.3);\n}\n\n.action-button.secondary {\n  background: rgba(30, 41, 59, 0.7);\n  color: #cbd5e1;\n  border: 1px solid rgba(100, 116, 139, 0.3);\n}\n\n.action-button.secondary:hover {\n  background: rgba(51, 65, 85, 0.7);\n  transform: translateY(-2px);\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);\n}\n\n.action-button.tertiary {\n  background: rgba(30, 41, 59, 0.7);\n  color: #cbd5e1;\n  border: 1px solid rgba(100, 116, 139, 0.3);\n}\n\n.action-button.tertiary:hover {\n  background: rgba(51, 65, 85, 0.7);\n  transform: translateY(-2px);\n  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);\n}\n\n/* 模板列表美化 */\n.template-list {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  gap: 1.5rem;\n  margin-top: 1rem;\n}\n\n.template-card {\n  background: rgba(15, 23, 42, 0.6);\n  border-radius: 16px;\n  overflow: hidden;\n  transition: all 0.3s ease;\n  border: 1px solid rgba(100, 116, 139, 0.2);\n  box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.2);\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n}\n\n.template-card:hover {\n  transform: translateY(-5px);\n  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.2);\n  border-color: rgba(96, 165, 250, 0.3);\n}\n\n.default-template {\n  border: 2px solid rgba(234, 179, 8, 0.5);\n  box-shadow: 0 0 0 3px rgba(234, 179, 8, 0.1);\n}\n\n.default-template .card-header {\n  background: linear-gradient(90deg, rgba(234, 179, 8, 0.15), transparent);\n}\n\n.card-header {\n  padding: 1.2rem 1.5rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: rgba(30, 41, 59, 0.5);\n  border-bottom: 1px solid rgba(100, 116, 139, 0.2);\n}\n\n.template-meta {\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.template-name {\n  font-weight: 600;\n  font-size: 1.3rem;\n  color: #f1f5f9;\n}\n\n.default-badge {\n  background: rgba(234, 179, 8, 0.2);\n  color: #fbbf24;\n  font-size: 0.85rem;\n  padding: 0.25rem 0.8rem;\n  border-radius: 100px;\n  display: inline-flex;\n  align-items: center;\n  gap: 0.5rem;\n  width: fit-content;\n}\n\n.template-actions {\n  display: flex;\n  gap: 0.5rem;\n}\n\n.template-actions .el-button {\n  border-radius: 50%;\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: rgba(30, 41, 59, 0.5);\n  border: 1px solid rgba(100, 116, 139, 0.2);\n  color: #94a3b8;\n  transition: all 0.2s ease;\n}\n\n.template-actions .el-button:hover {\n  background: rgba(51, 65, 85, 0.7);\n  transform: scale(1.1);\n}\n\n.template-preview {\n  padding: 1.5rem;\n  flex-grow: 1;\n  display: flex;\n  align-items: center;\n}\n\n.preview-content {\n  width: 100%;\n}\n\n.template-preview-content {\n  width: 100%;\n}\n\n.template-preview-content h3 {\n  font-size: 1.5rem;\n  color: #e2e8f0;\n  margin-top: 0;\n  margin-bottom: 1rem;\n  position: relative;\n  padding-bottom: 0.5rem;\n}\n\n.template-preview-content h3::after {\n  content: '';\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  width: 50px;\n  height: 3px;\n  background: #60a5fa;\n  border-radius: 3px;\n}\n\n.preview-stats {\n  display: flex;\n  gap: 1.5rem;\n  margin-bottom: 1.2rem;\n}\n\n.stat-item {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  font-size: 0.95rem;\n  color: #94a3b8;\n}\n\n.stat-item i {\n  color: #60a5fa;\n  font-size: 1.1rem;\n}\n\n.preview-sections {\n  background: rgba(30, 41, 59, 0.4);\n  padding: 1rem;\n  border-radius: 10px;\n  font-size: 0.95rem;\n  color: #cbd5e1;\n  line-height: 1.6;\n}\n\n.card-footer {\n  padding: 1rem 1.5rem;\n  border-top: 1px solid rgba(100, 116, 139, 0.2);\n}\n\n.footer-info {\n  display: flex;\n  justify-content: space-between;\n  font-size: 0.9rem;\n  color: #94a3b8;\n}\n\n.create-date, .template-id {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.add-new {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  background: rgba(15, 23, 42, 0.4);\n  border: 2px dashed rgba(100, 116, 139, 0.4);\n  transition: all 0.3s ease;\n}\n\n.add-new:hover {\n  border-color: #60a5fa;\n  background: rgba(96, 165, 250, 0.1);\n  transform: translateY(-5px);\n}\n\n.add-new-content {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 1rem;\n  color: #94a3b8;\n  transition: all 0.3s ease;\n}\n\n.add-new-content i {\n  font-size: 3rem;\n  color: #60a5fa;\n}\n\n.add-new:hover .add-new-content {\n  color: #e2e8f0;\n  transform: scale(1.05);\n}\n\n/* 编辑器对话框美化 */\n.template-editor-dialog {\n  border-radius: 16px;\n  background: linear-gradient(135deg, #0f172a 0%, #1e293b 100%);\n  border: 1px solid rgba(100, 116, 139, 0.3);\n  max-width: 1200px;\n}\n\n.template-editor-dialog .el-dialog__header {\n  background: rgba(15, 23, 42, 0.8);\n  border-bottom: 1px solid rgba(100, 116, 139, 0.2);\n  margin: 0;\n  padding: 1.2rem 1.5rem;\n}\n\n.template-editor-dialog .el-dialog__title {\n  color: #f1f5f9;\n  font-weight: 600;\n  font-size: 1.3rem;\n}\n\n.template-editor-dialog .el-dialog__body {\n  padding: 0;\n}\n\n.template-editor-dialog .el-dialog__headerbtn {\n  top: 1.2rem;\n  color: #94a3b8;\n}\n\n.template-editor-dialog .el-dialog__headerbtn:hover {\n  color: #f8fafc;\n}\n\n.template-editor-container {\n  padding: 1.5rem;\n}\n\n.editor-header {\n  display: flex;\n  gap: 1.5rem;\n  margin-bottom: 1.5rem;\n}\n\n.editor-header .el-input {\n  flex-grow: 1;\n}\n\n.editor-header .el-input__wrapper {\n  background: rgba(30, 41, 59, 0.6);\n  border: 1px solid rgba(100, 116, 139, 0.3);\n  box-shadow: none;\n  color: #e2e8f0;\n  font-size: 1.1rem;\n  padding: 0.8rem 1rem;\n}\n\n.editor-header .el-input__wrapper:hover {\n  border-color: #60a5fa;\n}\n\n.editor-header .el-input__inner::placeholder {\n  color: #64748b;\n}\n\n.editor-header .el-switch {\n  height: 40px;\n  display: flex;\n  align-items: center;\n}\n\n.editor-toolbar {\n  display: flex;\n  justify-content: space-between;\n  padding: 0.8rem;\n  background: rgba(30, 41, 59, 0.5);\n  border-radius: 10px;\n  margin-bottom: 1.5rem;\n  border: 1px solid rgba(100, 116, 139, 0.2);\n}\n\n.toolbar-left {\n  display: flex;\n  gap: 0.8rem;\n}\n\n.toolbar-right {\n  display: flex;\n  gap: 0.8rem;\n}\n\n.editor-toolbar .el-button {\n  border-radius: 8px;\n  background: rgba(30, 41, 59, 0.4);\n  border: 1px solid rgba(100, 116, 139, 0.2);\n  color: #94a3b8;\n  transition: all 0.2s ease;\n}\n\n.editor-toolbar .el-button:hover {\n  background: rgba(51, 65, 85, 0.7);\n  transform: translateY(-2px);\n  color: #e2e8f0;\n}\n\n/* ---------- 编辑器主体 ---------- */\n.editor-content {\n  display: flex;\n  gap: 1rem;\n}\n\n/* Markdown 编辑器 */\n.markdown-editor {\n  flex: 1;\n  min-height: 400px;\n  resize: vertical;\n  padding: 1rem;\n  background: rgba(15, 23, 42, 0.6);\n  border: 1px solid rgba(100, 116, 139, 0.3);\n  border-radius: 10px;\n  color: #e2e8f0;\n  font-size: 1rem;\n  line-height: 1.6;\n  font-family: 'Fira Code', monospace;\n}\n\n.markdown-editor::placeholder {\n  color: #64748b;\n}\n\n/* 预览面板 */\n.preview-pane {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background: rgba(15, 23, 42, 0.6);\n  border: 1px solid rgba(100, 116, 139, 0.3);\n  border-radius: 10px;\n  overflow: hidden;\n}\n\n.preview-header {\n  padding: 0.8rem 1rem;\n  background: rgba(30, 41, 59, 0.6);\n  border-bottom: 1px solid rgba(100, 116, 139, 0.2);\n}\n\n.preview-header h4 {\n  margin: 0;\n  font-size: 1rem;\n  font-weight: 600;\n  color: #f1f5f9;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.preview-header i {\n  color: #60a5fa;\n}\n\n.preview-pane .preview-content {\n  padding: 1rem;\n  overflow-y: auto;\n  color: #cbd5e1;\n}\n\n/* ---------- Dialog 底部按钮 ---------- */\n.dialog-footer {\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n  padding: 1rem 1.5rem;\n  background: rgba(30, 41, 59, 0.6);\n  border-top: 1px solid rgba(100, 116, 139, 0.2);\n}\n\n.dialog-footer .el-button {\n  border-radius: 8px;\n  padding: 0.9rem 1.5rem;\n  font-weight: 600;\n}\n\n.dialog-footer .el-button--primary {\n  background: linear-gradient(135deg, #3b82f6, #60a5fa);\n  border: none;\n  color: #fff;\n}\n\n.dialog-footer .el-button--primary:hover {\n  background: linear-gradient(135deg, #2563eb, #3b82f6);\n}\n\n.dialog-footer .el-button:not(.el-button--primary) {\n  background: rgba(30, 41, 59, 0.6);\n  border: 1px solid rgba(100, 116, 139, 0.3);\n  color: #cbd5e1;\n}\n\n.dialog-footer .el-button:not(.el-button--primary):hover {\n  background: rgba(51, 65, 85, 0.7);\n}\n\n/* ---------- 滚动条美化 ---------- */\n::-webkit-scrollbar {\n  width: 8px;\n  height: 8px;\n}\n\n::-webkit-scrollbar-thumb {\n  background: rgba(100, 116, 139, 0.4);\n  border-radius: 4px;\n}\n\n::-webkit-scrollbar-thumb:hover {\n  background: rgba(100, 116, 139, 0.6);\n}\n\n::-webkit-scrollbar-track {\n  background: transparent;\n}\n/* ===== Markdown 内联排版 ===== */\n.preview-content h1,\n.preview-content h2,\n.preview-content h3,\n.preview-content h4 {\n  margin: 0.6em 0 0.4em;\n  font-weight: 700;\n}\n\n.preview-content p {\n  margin: 0.4em 0;\n}\n\n.preview-content strong {\n  font-weight: 700;\n}\n\n.preview-content em {\n  font-style: italic;\n}\n\n.preview-content code {\n  font-family: 'Fira Code', monospace;\n  padding: 0.15em 0.3em;\n  background: rgba(100, 116, 139, 0.2);\n  border-radius: 4px;\n  font-size: 0.95em;\n}\n\n.preview-content pre code {\n  display: block;\n  padding: 1em;\n  overflow-x: auto;\n  border-radius: 8px;\n}\n\n</style>\n","/**\n * marked v9.1.6 - a markdown parser\n * Copyright (c) 2011-2023, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n/**\n * Gets the original marked default options.\n */\nfunction _getDefaults() {\n    return {\n        async: false,\n        breaks: false,\n        extensions: null,\n        gfm: true,\n        hooks: null,\n        pedantic: false,\n        renderer: null,\n        silent: false,\n        tokenizer: null,\n        walkTokens: null\n    };\n}\nlet _defaults = _getDefaults();\nfunction changeDefaults(newDefaults) {\n    _defaults = newDefaults;\n}\n\n/**\n * Helpers\n */\nconst escapeTest = /[&<>\"']/;\nconst escapeReplace = new RegExp(escapeTest.source, 'g');\nconst escapeTestNoEncode = /[<>\"']|&(?!(#\\d{1,7}|#[Xx][a-fA-F0-9]{1,6}|\\w+);)/;\nconst escapeReplaceNoEncode = new RegExp(escapeTestNoEncode.source, 'g');\nconst escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n};\nconst getEscapeReplacement = (ch) => escapeReplacements[ch];\nfunction escape(html, encode) {\n    if (encode) {\n        if (escapeTest.test(html)) {\n            return html.replace(escapeReplace, getEscapeReplacement);\n        }\n    }\n    else {\n        if (escapeTestNoEncode.test(html)) {\n            return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n        }\n    }\n    return html;\n}\nconst unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\nfunction unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, (_, n) => {\n        n = n.toLowerCase();\n        if (n === 'colon')\n            return ':';\n        if (n.charAt(0) === '#') {\n            return n.charAt(1) === 'x'\n                ? String.fromCharCode(parseInt(n.substring(2), 16))\n                : String.fromCharCode(+n.substring(1));\n        }\n        return '';\n    });\n}\nconst caret = /(^|[^\\[])\\^/g;\nfunction edit(regex, opt) {\n    regex = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    const obj = {\n        replace: (name, val) => {\n            val = typeof val === 'object' && 'source' in val ? val.source : val;\n            val = val.replace(caret, '$1');\n            regex = regex.replace(name, val);\n            return obj;\n        },\n        getRegex: () => {\n            return new RegExp(regex, opt);\n        }\n    };\n    return obj;\n}\nfunction cleanUrl(href) {\n    try {\n        href = encodeURI(href).replace(/%25/g, '%');\n    }\n    catch (e) {\n        return null;\n    }\n    return href;\n}\nconst noopTest = { exec: () => null };\nfunction splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    const row = tableRow.replace(/\\|/g, (match, offset, str) => {\n        let escaped = false;\n        let curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\')\n            escaped = !escaped;\n        if (escaped) {\n            // odd number of slashes means | is escaped\n            // so we leave it alone\n            return '|';\n        }\n        else {\n            // add space before unescaped |\n            return ' |';\n        }\n    }), cells = row.split(/ \\|/);\n    let i = 0;\n    // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n    if (!cells[0].trim()) {\n        cells.shift();\n    }\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n        cells.pop();\n    }\n    if (count) {\n        if (cells.length > count) {\n            cells.splice(count);\n        }\n        else {\n            while (cells.length < count)\n                cells.push('');\n        }\n    }\n    for (; i < cells.length; i++) {\n        // leading or trailing whitespace is ignored per the gfm spec\n        cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n    return cells;\n}\n/**\n * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n * /c*$/ is vulnerable to REDOS.\n *\n * @param str\n * @param c\n * @param invert Remove suffix of non-c chars instead. Default falsey.\n */\nfunction rtrim(str, c, invert) {\n    const l = str.length;\n    if (l === 0) {\n        return '';\n    }\n    // Length of suffix matching the invert condition.\n    let suffLen = 0;\n    // Step left until we fail to match the invert condition.\n    while (suffLen < l) {\n        const currChar = str.charAt(l - suffLen - 1);\n        if (currChar === c && !invert) {\n            suffLen++;\n        }\n        else if (currChar !== c && invert) {\n            suffLen++;\n        }\n        else {\n            break;\n        }\n    }\n    return str.slice(0, l - suffLen);\n}\nfunction findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n        return -1;\n    }\n    let level = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === '\\\\') {\n            i++;\n        }\n        else if (str[i] === b[0]) {\n            level++;\n        }\n        else if (str[i] === b[1]) {\n            level--;\n            if (level < 0) {\n                return i;\n            }\n        }\n    }\n    return -1;\n}\n\nfunction outputLink(cap, link, raw, lexer) {\n    const href = link.href;\n    const title = link.title ? escape(link.title) : null;\n    const text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n    if (cap[0].charAt(0) !== '!') {\n        lexer.state.inLink = true;\n        const token = {\n            type: 'link',\n            raw,\n            href,\n            title,\n            text,\n            tokens: lexer.inlineTokens(text)\n        };\n        lexer.state.inLink = false;\n        return token;\n    }\n    return {\n        type: 'image',\n        raw,\n        href,\n        title,\n        text: escape(text)\n    };\n}\nfunction indentCodeCompensation(raw, text) {\n    const matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n    if (matchIndentToCode === null) {\n        return text;\n    }\n    const indentToCode = matchIndentToCode[1];\n    return text\n        .split('\\n')\n        .map(node => {\n        const matchIndentInNode = node.match(/^\\s+/);\n        if (matchIndentInNode === null) {\n            return node;\n        }\n        const [indentInNode] = matchIndentInNode;\n        if (indentInNode.length >= indentToCode.length) {\n            return node.slice(indentToCode.length);\n        }\n        return node;\n    })\n        .join('\\n');\n}\n/**\n * Tokenizer\n */\nclass _Tokenizer {\n    options;\n    // TODO: Fix this rules type\n    rules;\n    lexer;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    space(src) {\n        const cap = this.rules.block.newline.exec(src);\n        if (cap && cap[0].length > 0) {\n            return {\n                type: 'space',\n                raw: cap[0]\n            };\n        }\n    }\n    code(src) {\n        const cap = this.rules.block.code.exec(src);\n        if (cap) {\n            const text = cap[0].replace(/^ {1,4}/gm, '');\n            return {\n                type: 'code',\n                raw: cap[0],\n                codeBlockStyle: 'indented',\n                text: !this.options.pedantic\n                    ? rtrim(text, '\\n')\n                    : text\n            };\n        }\n    }\n    fences(src) {\n        const cap = this.rules.block.fences.exec(src);\n        if (cap) {\n            const raw = cap[0];\n            const text = indentCodeCompensation(raw, cap[3] || '');\n            return {\n                type: 'code',\n                raw,\n                lang: cap[2] ? cap[2].trim().replace(this.rules.inline._escapes, '$1') : cap[2],\n                text\n            };\n        }\n    }\n    heading(src) {\n        const cap = this.rules.block.heading.exec(src);\n        if (cap) {\n            let text = cap[2].trim();\n            // remove trailing #s\n            if (/#$/.test(text)) {\n                const trimmed = rtrim(text, '#');\n                if (this.options.pedantic) {\n                    text = trimmed.trim();\n                }\n                else if (!trimmed || / $/.test(trimmed)) {\n                    // CommonMark requires space before trailing #s\n                    text = trimmed.trim();\n                }\n            }\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[1].length,\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    hr(src) {\n        const cap = this.rules.block.hr.exec(src);\n        if (cap) {\n            return {\n                type: 'hr',\n                raw: cap[0]\n            };\n        }\n    }\n    blockquote(src) {\n        const cap = this.rules.block.blockquote.exec(src);\n        if (cap) {\n            const text = rtrim(cap[0].replace(/^ *>[ \\t]?/gm, ''), '\\n');\n            const top = this.lexer.state.top;\n            this.lexer.state.top = true;\n            const tokens = this.lexer.blockTokens(text);\n            this.lexer.state.top = top;\n            return {\n                type: 'blockquote',\n                raw: cap[0],\n                tokens,\n                text\n            };\n        }\n    }\n    list(src) {\n        let cap = this.rules.block.list.exec(src);\n        if (cap) {\n            let bull = cap[1].trim();\n            const isordered = bull.length > 1;\n            const list = {\n                type: 'list',\n                raw: '',\n                ordered: isordered,\n                start: isordered ? +bull.slice(0, -1) : '',\n                loose: false,\n                items: []\n            };\n            bull = isordered ? `\\\\d{1,9}\\\\${bull.slice(-1)}` : `\\\\${bull}`;\n            if (this.options.pedantic) {\n                bull = isordered ? bull : '[*+-]';\n            }\n            // Get next list item\n            const itemRegex = new RegExp(`^( {0,3}${bull})((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))`);\n            let raw = '';\n            let itemContents = '';\n            let endsWithBlankLine = false;\n            // Check if current bullet point can start a new List Item\n            while (src) {\n                let endEarly = false;\n                if (!(cap = itemRegex.exec(src))) {\n                    break;\n                }\n                if (this.rules.block.hr.test(src)) { // End list if bullet was actually HR (possibly move into itemRegex?)\n                    break;\n                }\n                raw = cap[0];\n                src = src.substring(raw.length);\n                let line = cap[2].split('\\n', 1)[0].replace(/^\\t+/, (t) => ' '.repeat(3 * t.length));\n                let nextLine = src.split('\\n', 1)[0];\n                let indent = 0;\n                if (this.options.pedantic) {\n                    indent = 2;\n                    itemContents = line.trimStart();\n                }\n                else {\n                    indent = cap[2].search(/[^ ]/); // Find first non-space char\n                    indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n                    itemContents = line.slice(indent);\n                    indent += cap[1].length;\n                }\n                let blankLine = false;\n                if (!line && /^ *$/.test(nextLine)) { // Items begin with at most one blank line\n                    raw += nextLine + '\\n';\n                    src = src.substring(nextLine.length + 1);\n                    endEarly = true;\n                }\n                if (!endEarly) {\n                    const nextBulletRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:[*+-]|\\\\d{1,9}[.)])((?:[ \\t][^\\\\n]*)?(?:\\\\n|$))`);\n                    const hrRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)`);\n                    const fencesBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}(?:\\`\\`\\`|~~~)`);\n                    const headingBeginRegex = new RegExp(`^ {0,${Math.min(3, indent - 1)}}#`);\n                    // Check if following lines should be included in List Item\n                    while (src) {\n                        const rawLine = src.split('\\n', 1)[0];\n                        nextLine = rawLine;\n                        // Re-align to follow commonmark nesting rules\n                        if (this.options.pedantic) {\n                            nextLine = nextLine.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n                        }\n                        // End list item if found code fences\n                        if (fencesBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new heading\n                        if (headingBeginRegex.test(nextLine)) {\n                            break;\n                        }\n                        // End list item if found start of new bullet\n                        if (nextBulletRegex.test(nextLine)) {\n                            break;\n                        }\n                        // Horizontal rule found\n                        if (hrRegex.test(src)) {\n                            break;\n                        }\n                        if (nextLine.search(/[^ ]/) >= indent || !nextLine.trim()) { // Dedent if possible\n                            itemContents += '\\n' + nextLine.slice(indent);\n                        }\n                        else {\n                            // not enough indentation\n                            if (blankLine) {\n                                break;\n                            }\n                            // paragraph continuation unless last line was a different block level element\n                            if (line.search(/[^ ]/) >= 4) { // indented code block\n                                break;\n                            }\n                            if (fencesBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (headingBeginRegex.test(line)) {\n                                break;\n                            }\n                            if (hrRegex.test(line)) {\n                                break;\n                            }\n                            itemContents += '\\n' + nextLine;\n                        }\n                        if (!blankLine && !nextLine.trim()) { // Check if current line is blank\n                            blankLine = true;\n                        }\n                        raw += rawLine + '\\n';\n                        src = src.substring(rawLine.length + 1);\n                        line = nextLine.slice(indent);\n                    }\n                }\n                if (!list.loose) {\n                    // If the previous item ended with a blank line, the list is loose\n                    if (endsWithBlankLine) {\n                        list.loose = true;\n                    }\n                    else if (/\\n *\\n *$/.test(raw)) {\n                        endsWithBlankLine = true;\n                    }\n                }\n                let istask = null;\n                let ischecked;\n                // Check for task list items\n                if (this.options.gfm) {\n                    istask = /^\\[[ xX]\\] /.exec(itemContents);\n                    if (istask) {\n                        ischecked = istask[0] !== '[ ] ';\n                        itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n                    }\n                }\n                list.items.push({\n                    type: 'list_item',\n                    raw,\n                    task: !!istask,\n                    checked: ischecked,\n                    loose: false,\n                    text: itemContents,\n                    tokens: []\n                });\n                list.raw += raw;\n            }\n            // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n            list.items[list.items.length - 1].raw = raw.trimEnd();\n            list.items[list.items.length - 1].text = itemContents.trimEnd();\n            list.raw = list.raw.trimEnd();\n            // Item child tokens handled here at end because we needed to have the final item to trim it first\n            for (let i = 0; i < list.items.length; i++) {\n                this.lexer.state.top = false;\n                list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n                if (!list.loose) {\n                    // Check if list should be loose\n                    const spacers = list.items[i].tokens.filter(t => t.type === 'space');\n                    const hasMultipleLineBreaks = spacers.length > 0 && spacers.some(t => /\\n.*\\n/.test(t.raw));\n                    list.loose = hasMultipleLineBreaks;\n                }\n            }\n            // Set all items to loose if list is loose\n            if (list.loose) {\n                for (let i = 0; i < list.items.length; i++) {\n                    list.items[i].loose = true;\n                }\n            }\n            return list;\n        }\n    }\n    html(src) {\n        const cap = this.rules.block.html.exec(src);\n        if (cap) {\n            const token = {\n                type: 'html',\n                block: true,\n                raw: cap[0],\n                pre: cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style',\n                text: cap[0]\n            };\n            return token;\n        }\n    }\n    def(src) {\n        const cap = this.rules.block.def.exec(src);\n        if (cap) {\n            const tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n            const href = cap[2] ? cap[2].replace(/^<(.*)>$/, '$1').replace(this.rules.inline._escapes, '$1') : '';\n            const title = cap[3] ? cap[3].substring(1, cap[3].length - 1).replace(this.rules.inline._escapes, '$1') : cap[3];\n            return {\n                type: 'def',\n                tag,\n                raw: cap[0],\n                href,\n                title\n            };\n        }\n    }\n    table(src) {\n        const cap = this.rules.block.table.exec(src);\n        if (cap) {\n            if (!/[:|]/.test(cap[2])) {\n                // delimiter row must have a pipe (|) or colon (:) otherwise it is a setext heading\n                return;\n            }\n            const item = {\n                type: 'table',\n                raw: cap[0],\n                header: splitCells(cap[1]).map(c => {\n                    return { text: c, tokens: [] };\n                }),\n                align: cap[2].replace(/^\\||\\| *$/g, '').split('|'),\n                rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n            };\n            if (item.header.length === item.align.length) {\n                let l = item.align.length;\n                let i, j, k, row;\n                for (i = 0; i < l; i++) {\n                    const align = item.align[i];\n                    if (align) {\n                        if (/^ *-+: *$/.test(align)) {\n                            item.align[i] = 'right';\n                        }\n                        else if (/^ *:-+: *$/.test(align)) {\n                            item.align[i] = 'center';\n                        }\n                        else if (/^ *:-+ *$/.test(align)) {\n                            item.align[i] = 'left';\n                        }\n                        else {\n                            item.align[i] = null;\n                        }\n                    }\n                }\n                l = item.rows.length;\n                for (i = 0; i < l; i++) {\n                    item.rows[i] = splitCells(item.rows[i], item.header.length).map(c => {\n                        return { text: c, tokens: [] };\n                    });\n                }\n                // parse child tokens inside headers and cells\n                // header child tokens\n                l = item.header.length;\n                for (j = 0; j < l; j++) {\n                    item.header[j].tokens = this.lexer.inline(item.header[j].text);\n                }\n                // cell child tokens\n                l = item.rows.length;\n                for (j = 0; j < l; j++) {\n                    row = item.rows[j];\n                    for (k = 0; k < row.length; k++) {\n                        row[k].tokens = this.lexer.inline(row[k].text);\n                    }\n                }\n                return item;\n            }\n        }\n    }\n    lheading(src) {\n        const cap = this.rules.block.lheading.exec(src);\n        if (cap) {\n            return {\n                type: 'heading',\n                raw: cap[0],\n                depth: cap[2].charAt(0) === '=' ? 1 : 2,\n                text: cap[1],\n                tokens: this.lexer.inline(cap[1])\n            };\n        }\n    }\n    paragraph(src) {\n        const cap = this.rules.block.paragraph.exec(src);\n        if (cap) {\n            const text = cap[1].charAt(cap[1].length - 1) === '\\n'\n                ? cap[1].slice(0, -1)\n                : cap[1];\n            return {\n                type: 'paragraph',\n                raw: cap[0],\n                text,\n                tokens: this.lexer.inline(text)\n            };\n        }\n    }\n    text(src) {\n        const cap = this.rules.block.text.exec(src);\n        if (cap) {\n            return {\n                type: 'text',\n                raw: cap[0],\n                text: cap[0],\n                tokens: this.lexer.inline(cap[0])\n            };\n        }\n    }\n    escape(src) {\n        const cap = this.rules.inline.escape.exec(src);\n        if (cap) {\n            return {\n                type: 'escape',\n                raw: cap[0],\n                text: escape(cap[1])\n            };\n        }\n    }\n    tag(src) {\n        const cap = this.rules.inline.tag.exec(src);\n        if (cap) {\n            if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n                this.lexer.state.inLink = true;\n            }\n            else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n                this.lexer.state.inLink = false;\n            }\n            if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = true;\n            }\n            else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n                this.lexer.state.inRawBlock = false;\n            }\n            return {\n                type: 'html',\n                raw: cap[0],\n                inLink: this.lexer.state.inLink,\n                inRawBlock: this.lexer.state.inRawBlock,\n                block: false,\n                text: cap[0]\n            };\n        }\n    }\n    link(src) {\n        const cap = this.rules.inline.link.exec(src);\n        if (cap) {\n            const trimmedUrl = cap[2].trim();\n            if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n                // commonmark requires matching angle brackets\n                if (!(/>$/.test(trimmedUrl))) {\n                    return;\n                }\n                // ending angle bracket cannot be escaped\n                const rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n                if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n                    return;\n                }\n            }\n            else {\n                // find closing parenthesis\n                const lastParenIndex = findClosingBracket(cap[2], '()');\n                if (lastParenIndex > -1) {\n                    const start = cap[0].indexOf('!') === 0 ? 5 : 4;\n                    const linkLen = start + cap[1].length + lastParenIndex;\n                    cap[2] = cap[2].substring(0, lastParenIndex);\n                    cap[0] = cap[0].substring(0, linkLen).trim();\n                    cap[3] = '';\n                }\n            }\n            let href = cap[2];\n            let title = '';\n            if (this.options.pedantic) {\n                // split pedantic href and title\n                const link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n                if (link) {\n                    href = link[1];\n                    title = link[3];\n                }\n            }\n            else {\n                title = cap[3] ? cap[3].slice(1, -1) : '';\n            }\n            href = href.trim();\n            if (/^</.test(href)) {\n                if (this.options.pedantic && !(/>$/.test(trimmedUrl))) {\n                    // pedantic allows starting angle bracket without ending angle bracket\n                    href = href.slice(1);\n                }\n                else {\n                    href = href.slice(1, -1);\n                }\n            }\n            return outputLink(cap, {\n                href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n                title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n            }, cap[0], this.lexer);\n        }\n    }\n    reflink(src, links) {\n        let cap;\n        if ((cap = this.rules.inline.reflink.exec(src))\n            || (cap = this.rules.inline.nolink.exec(src))) {\n            let link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n            link = links[link.toLowerCase()];\n            if (!link) {\n                const text = cap[0].charAt(0);\n                return {\n                    type: 'text',\n                    raw: text,\n                    text\n                };\n            }\n            return outputLink(cap, link, cap[0], this.lexer);\n        }\n    }\n    emStrong(src, maskedSrc, prevChar = '') {\n        let match = this.rules.inline.emStrong.lDelim.exec(src);\n        if (!match)\n            return;\n        // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n        if (match[3] && prevChar.match(/[\\p{L}\\p{N}]/u))\n            return;\n        const nextChar = match[1] || match[2] || '';\n        if (!nextChar || !prevChar || this.rules.inline.punctuation.exec(prevChar)) {\n            // unicode Regex counts emoji as 1 char; spread into array for proper count (used multiple times below)\n            const lLength = [...match[0]].length - 1;\n            let rDelim, rLength, delimTotal = lLength, midDelimTotal = 0;\n            const endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n            endReg.lastIndex = 0;\n            // Clip maskedSrc to same section of string as src (move to lexer?)\n            maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n            while ((match = endReg.exec(maskedSrc)) != null) {\n                rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n                if (!rDelim)\n                    continue; // skip single * in __abc*abc__\n                rLength = [...rDelim].length;\n                if (match[3] || match[4]) { // found another Left Delim\n                    delimTotal += rLength;\n                    continue;\n                }\n                else if (match[5] || match[6]) { // either Left or Right Delim\n                    if (lLength % 3 && !((lLength + rLength) % 3)) {\n                        midDelimTotal += rLength;\n                        continue; // CommonMark Emphasis Rules 9-10\n                    }\n                }\n                delimTotal -= rLength;\n                if (delimTotal > 0)\n                    continue; // Haven't found enough closing delimiters\n                // Remove extra characters. *a*** -> *a*\n                rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal);\n                // char length can be >1 for unicode characters;\n                const lastCharLength = [...match[0]][0].length;\n                const raw = src.slice(0, lLength + match.index + lastCharLength + rLength);\n                // Create `em` if smallest delimiter has odd char count. *a***\n                if (Math.min(lLength, rLength) % 2) {\n                    const text = raw.slice(1, -1);\n                    return {\n                        type: 'em',\n                        raw,\n                        text,\n                        tokens: this.lexer.inlineTokens(text)\n                    };\n                }\n                // Create 'strong' if smallest delimiter has even char count. **a***\n                const text = raw.slice(2, -2);\n                return {\n                    type: 'strong',\n                    raw,\n                    text,\n                    tokens: this.lexer.inlineTokens(text)\n                };\n            }\n        }\n    }\n    codespan(src) {\n        const cap = this.rules.inline.code.exec(src);\n        if (cap) {\n            let text = cap[2].replace(/\\n/g, ' ');\n            const hasNonSpaceChars = /[^ ]/.test(text);\n            const hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n            if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n                text = text.substring(1, text.length - 1);\n            }\n            text = escape(text, true);\n            return {\n                type: 'codespan',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n    br(src) {\n        const cap = this.rules.inline.br.exec(src);\n        if (cap) {\n            return {\n                type: 'br',\n                raw: cap[0]\n            };\n        }\n    }\n    del(src) {\n        const cap = this.rules.inline.del.exec(src);\n        if (cap) {\n            return {\n                type: 'del',\n                raw: cap[0],\n                text: cap[2],\n                tokens: this.lexer.inlineTokens(cap[2])\n            };\n        }\n    }\n    autolink(src) {\n        const cap = this.rules.inline.autolink.exec(src);\n        if (cap) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape(cap[1]);\n                href = 'mailto:' + text;\n            }\n            else {\n                text = escape(cap[1]);\n                href = text;\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    url(src) {\n        let cap;\n        if (cap = this.rules.inline.url.exec(src)) {\n            let text, href;\n            if (cap[2] === '@') {\n                text = escape(cap[0]);\n                href = 'mailto:' + text;\n            }\n            else {\n                // do extended autolink path validation\n                let prevCapZero;\n                do {\n                    prevCapZero = cap[0];\n                    cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n                } while (prevCapZero !== cap[0]);\n                text = escape(cap[0]);\n                if (cap[1] === 'www.') {\n                    href = 'http://' + cap[0];\n                }\n                else {\n                    href = cap[0];\n                }\n            }\n            return {\n                type: 'link',\n                raw: cap[0],\n                text,\n                href,\n                tokens: [\n                    {\n                        type: 'text',\n                        raw: text,\n                        text\n                    }\n                ]\n            };\n        }\n    }\n    inlineText(src) {\n        const cap = this.rules.inline.text.exec(src);\n        if (cap) {\n            let text;\n            if (this.lexer.state.inRawBlock) {\n                text = cap[0];\n            }\n            else {\n                text = escape(cap[0]);\n            }\n            return {\n                type: 'text',\n                raw: cap[0],\n                text\n            };\n        }\n    }\n}\n\n/**\n * Block-Level Grammar\n */\n// Not all rules are defined in the object literal\n// @ts-expect-error\nconst block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*(?:\\n|$))|~{3,})([^\\n]*)(?:\\n|$)(?:|([\\s\\S]*?)(?:\\n|$))(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n        + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n        + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n        + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n        + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n        + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n        + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n        + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n        + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n        + ')',\n    def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?([^<\\s][^\\s]*|<.*?>)(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^(?!bull )((?:.|\\n(?!\\s*?\\n|bull ))+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n};\nblock._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n    .replace('label', block._label)\n    .replace('title', block._title)\n    .getRegex();\nblock.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\nblock.listItemStart = edit(/^( *)(bull) */)\n    .replace('bull', block.bullet)\n    .getRegex();\nblock.list = edit(block.list)\n    .replace(/bull/g, block.bullet)\n    .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n    .replace('def', '\\\\n+(?=' + block.def.source + ')')\n    .getRegex();\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n    + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n    + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n    + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n    + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n    + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\nblock.html = edit(block.html, 'i')\n    .replace('comment', block._comment)\n    .replace('tag', block._tag)\n    .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n    .getRegex();\nblock.lheading = edit(block.lheading)\n    .replace(/bull/g, block.bullet) // lists can interrupt\n    .getRegex();\nblock.paragraph = edit(block._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n    .replace('|table', '')\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\nblock.blockquote = edit(block.blockquote)\n    .replace('paragraph', block.paragraph)\n    .getRegex();\n/**\n * Normal Block Grammar\n */\nblock.normal = { ...block };\n/**\n * GFM Block Grammar\n */\nblock.gfm = {\n    ...block.normal,\n    table: '^ *([^\\\\n ].*)\\\\n' // Header\n        + ' {0,3}((?:\\\\| *)?:?-+:? *(?:\\\\| *:?-+:? *)*(?:\\\\| *)?)' // Align\n        + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n};\nblock.gfm.table = edit(block.gfm.table)\n    .replace('hr', block.hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('blockquote', ' {0,3}>')\n    .replace('code', ' {4}[^\\\\n]')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n    .getRegex();\nblock.gfm.paragraph = edit(block._paragraph)\n    .replace('hr', block.hr)\n    .replace('heading', ' {0,3}#{1,6}(?:\\\\s|$)')\n    .replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n    .replace('table', block.gfm.table) // interrupt paragraphs with table\n    .replace('blockquote', ' {0,3}>')\n    .replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n')\n    .replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n    .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)')\n    .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n    .getRegex();\n/**\n * Pedantic grammar (original John Gruber's loose markdown specification)\n */\nblock.pedantic = {\n    ...block.normal,\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)'\n        + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n        + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n        .replace('comment', block._comment)\n        .replace(/tag/g, '(?!(?:'\n        + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n        + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n        + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n        .getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    lheading: /^(.+?)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    paragraph: edit(block.normal._paragraph)\n        .replace('hr', block.hr)\n        .replace('heading', ' *#{1,6} *[^\\n]')\n        .replace('lheading', block.lheading)\n        .replace('blockquote', ' {0,3}>')\n        .replace('|fences', '')\n        .replace('|list', '')\n        .replace('|html', '')\n        .getRegex()\n};\n/**\n * Inline-Level Grammar\n */\n// Not all rules are defined in the object literal\n// @ts-expect-error\nconst inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment'\n        + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n        + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n        + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n        + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n        + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n    nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n        lDelim: /^(?:\\*+(?:((?!\\*)[punct])|[^\\s*]))|^_+(?:((?!_)[punct])|([^\\s_]))/,\n        //         (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n        //         | Skip orphan inside strong      | Consume to delim | (1) #***              | (2) a***#, a***                    | (3) #***a, ***a                  | (4) ***#                 | (5) #***#                         | (6) a***a\n        rDelimAst: /^[^_*]*?__[^_*]*?\\*[^_*]*?(?=__)|[^*]+(?=[^*])|(?!\\*)[punct](\\*+)(?=[\\s]|$)|[^punct\\s](\\*+)(?!\\*)(?=[punct\\s]|$)|(?!\\*)[punct\\s](\\*+)(?=[^punct\\s])|[\\s](\\*+)(?!\\*)(?=[punct])|(?!\\*)[punct](\\*+)(?!\\*)(?=[punct])|[^punct\\s](\\*+)(?=[^punct\\s])/,\n        rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|(?!_)[punct](_+)(?=[\\s]|$)|[^punct\\s](_+)(?!_)(?=[punct\\s]|$)|(?!_)[punct\\s](_+)(?=[^punct\\s])|[\\s](_+)(?!_)(?=[punct])|(?!_)[punct](_+)(?!_)(?=[punct])/ // ^- Not allowed for _\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^((?![*_])[\\spunctuation])/\n};\n// list of unicode punctuation marks, plus any missing characters from CommonMark spec\ninline._punctuation = '\\\\p{P}$+<=>`^|~';\ninline.punctuation = edit(inline.punctuation, 'u').replace(/punctuation/g, inline._punctuation).getRegex();\n// sequences em should skip over [title](link), `code`, <html>\ninline.blockSkip = /\\[[^[\\]]*?\\]\\([^\\(\\)]*?\\)|`[^`]*?`|<[^<>]*?>/g;\ninline.anyPunctuation = /\\\\[punct]/g;\ninline._escapes = /\\\\([punct])/g;\ninline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\ninline.emStrong.lDelim = edit(inline.emStrong.lDelim, 'u')\n    .replace(/punct/g, inline._punctuation)\n    .getRegex();\ninline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'gu')\n    .replace(/punct/g, inline._punctuation)\n    .getRegex();\ninline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'gu')\n    .replace(/punct/g, inline._punctuation)\n    .getRegex();\ninline.anyPunctuation = edit(inline.anyPunctuation, 'gu')\n    .replace(/punct/g, inline._punctuation)\n    .getRegex();\ninline._escapes = edit(inline._escapes, 'gu')\n    .replace(/punct/g, inline._punctuation)\n    .getRegex();\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n    .replace('scheme', inline._scheme)\n    .replace('email', inline._email)\n    .getRegex();\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\ninline.tag = edit(inline.tag)\n    .replace('comment', inline._comment)\n    .replace('attribute', inline._attribute)\n    .getRegex();\ninline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\ninline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\ninline.link = edit(inline.link)\n    .replace('label', inline._label)\n    .replace('href', inline._href)\n    .replace('title', inline._title)\n    .getRegex();\ninline.reflink = edit(inline.reflink)\n    .replace('label', inline._label)\n    .replace('ref', block._label)\n    .getRegex();\ninline.nolink = edit(inline.nolink)\n    .replace('ref', block._label)\n    .getRegex();\ninline.reflinkSearch = edit(inline.reflinkSearch, 'g')\n    .replace('reflink', inline.reflink)\n    .replace('nolink', inline.nolink)\n    .getRegex();\n/**\n * Normal Inline Grammar\n */\ninline.normal = { ...inline };\n/**\n * Pedantic Inline Grammar\n */\ninline.pedantic = {\n    ...inline.normal,\n    strong: {\n        start: /^__|\\*\\*/,\n        middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n        endAst: /\\*\\*(?!\\*)/g,\n        endUnd: /__(?!_)/g\n    },\n    em: {\n        start: /^_|\\*/,\n        middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n        endAst: /\\*(?!\\*)/g,\n        endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n        .replace('label', inline._label)\n        .getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n        .replace('label', inline._label)\n        .getRegex()\n};\n/**\n * GFM Inline Grammar\n */\ninline.gfm = {\n    ...inline.normal,\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_'\"~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_'\"~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n};\ninline.gfm.url = edit(inline.gfm.url, 'i')\n    .replace('email', inline.gfm._extended_email)\n    .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\ninline.breaks = {\n    ...inline.gfm,\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text)\n        .replace('\\\\b_', '\\\\b_| {2,}\\\\n')\n        .replace(/\\{2,\\}/g, '*')\n        .getRegex()\n};\n\n/**\n * Block Lexer\n */\nclass _Lexer {\n    tokens;\n    options;\n    state;\n    tokenizer;\n    inlineQueue;\n    constructor(options) {\n        // TokenList cannot be created in one go\n        // @ts-expect-error\n        this.tokens = [];\n        this.tokens.links = Object.create(null);\n        this.options = options || _defaults;\n        this.options.tokenizer = this.options.tokenizer || new _Tokenizer();\n        this.tokenizer = this.options.tokenizer;\n        this.tokenizer.options = this.options;\n        this.tokenizer.lexer = this;\n        this.inlineQueue = [];\n        this.state = {\n            inLink: false,\n            inRawBlock: false,\n            top: true\n        };\n        const rules = {\n            block: block.normal,\n            inline: inline.normal\n        };\n        if (this.options.pedantic) {\n            rules.block = block.pedantic;\n            rules.inline = inline.pedantic;\n        }\n        else if (this.options.gfm) {\n            rules.block = block.gfm;\n            if (this.options.breaks) {\n                rules.inline = inline.breaks;\n            }\n            else {\n                rules.inline = inline.gfm;\n            }\n        }\n        this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n    static get rules() {\n        return {\n            block,\n            inline\n        };\n    }\n    /**\n     * Static Lex Method\n     */\n    static lex(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    static lexInline(src, options) {\n        const lexer = new _Lexer(options);\n        return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    lex(src) {\n        src = src\n            .replace(/\\r\\n|\\r/g, '\\n');\n        this.blockTokens(src, this.tokens);\n        let next;\n        while (next = this.inlineQueue.shift()) {\n            this.inlineTokens(next.src, next.tokens);\n        }\n        return this.tokens;\n    }\n    blockTokens(src, tokens = []) {\n        if (this.options.pedantic) {\n            src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n        }\n        else {\n            src = src.replace(/^( *)(\\t+)/gm, (_, leading, tabs) => {\n                return leading + '    '.repeat(tabs.length);\n            });\n        }\n        let token;\n        let lastToken;\n        let cutSrc;\n        let lastParagraphClipped;\n        while (src) {\n            if (this.options.extensions\n                && this.options.extensions.block\n                && this.options.extensions.block.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // newline\n            if (token = this.tokenizer.space(src)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.length === 1 && tokens.length > 0) {\n                    // if there's a single \\n as a spacer, it's terminating the last line,\n                    // so move it there so that we don't get unnecessary paragraph tags\n                    tokens[tokens.length - 1].raw += '\\n';\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.code(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                // An indented code block cannot interrupt a paragraph.\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // fences\n            if (token = this.tokenizer.fences(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // heading\n            if (token = this.tokenizer.heading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // hr\n            if (token = this.tokenizer.hr(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // blockquote\n            if (token = this.tokenizer.blockquote(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // list\n            if (token = this.tokenizer.list(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // html\n            if (token = this.tokenizer.html(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // def\n            if (token = this.tokenizer.def(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.raw;\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else if (!this.tokens.links[token.tag]) {\n                    this.tokens.links[token.tag] = {\n                        href: token.href,\n                        title: token.title\n                    };\n                }\n                continue;\n            }\n            // table (gfm)\n            if (token = this.tokenizer.table(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // lheading\n            if (token = this.tokenizer.lheading(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // top-level paragraph\n            // prevent paragraph consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startBlock) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startBlock.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n                lastToken = tokens[tokens.length - 1];\n                if (lastParagraphClipped && lastToken.type === 'paragraph') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                lastParagraphClipped = (cutSrc.length !== src.length);\n                src = src.substring(token.raw.length);\n                continue;\n            }\n            // text\n            if (token = this.tokenizer.text(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += '\\n' + token.raw;\n                    lastToken.text += '\\n' + token.text;\n                    this.inlineQueue.pop();\n                    this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        this.state.top = true;\n        return tokens;\n    }\n    inline(src, tokens = []) {\n        this.inlineQueue.push({ src, tokens });\n        return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    inlineTokens(src, tokens = []) {\n        let token, lastToken, cutSrc;\n        // String with links masked to avoid interference with em and strong\n        let maskedSrc = src;\n        let match;\n        let keepPrevChar, prevChar;\n        // Mask out reflinks\n        if (this.tokens.links) {\n            const links = Object.keys(this.tokens.links);\n            if (links.length > 0) {\n                while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n                    if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n                        maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n                    }\n                }\n            }\n        }\n        // Mask out other blocks\n        while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '[' + 'a'.repeat(match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n        }\n        // Mask out escaped characters\n        while ((match = this.tokenizer.rules.inline.anyPunctuation.exec(maskedSrc)) != null) {\n            maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.anyPunctuation.lastIndex);\n        }\n        while (src) {\n            if (!keepPrevChar) {\n                prevChar = '';\n            }\n            keepPrevChar = false;\n            // extensions\n            if (this.options.extensions\n                && this.options.extensions.inline\n                && this.options.extensions.inline.some((extTokenizer) => {\n                    if (token = extTokenizer.call({ lexer: this }, src, tokens)) {\n                        src = src.substring(token.raw.length);\n                        tokens.push(token);\n                        return true;\n                    }\n                    return false;\n                })) {\n                continue;\n            }\n            // escape\n            if (token = this.tokenizer.escape(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // tag\n            if (token = this.tokenizer.tag(src)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // link\n            if (token = this.tokenizer.link(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // reflink, nolink\n            if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n                src = src.substring(token.raw.length);\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            // em & strong\n            if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // code\n            if (token = this.tokenizer.codespan(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // br\n            if (token = this.tokenizer.br(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // del (gfm)\n            if (token = this.tokenizer.del(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // autolink\n            if (token = this.tokenizer.autolink(src)) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // url (gfm)\n            if (!this.state.inLink && (token = this.tokenizer.url(src))) {\n                src = src.substring(token.raw.length);\n                tokens.push(token);\n                continue;\n            }\n            // text\n            // prevent inlineText consuming extensions by clipping 'src' to extension start\n            cutSrc = src;\n            if (this.options.extensions && this.options.extensions.startInline) {\n                let startIndex = Infinity;\n                const tempSrc = src.slice(1);\n                let tempStart;\n                this.options.extensions.startInline.forEach((getStartIndex) => {\n                    tempStart = getStartIndex.call({ lexer: this }, tempSrc);\n                    if (typeof tempStart === 'number' && tempStart >= 0) {\n                        startIndex = Math.min(startIndex, tempStart);\n                    }\n                });\n                if (startIndex < Infinity && startIndex >= 0) {\n                    cutSrc = src.substring(0, startIndex + 1);\n                }\n            }\n            if (token = this.tokenizer.inlineText(cutSrc)) {\n                src = src.substring(token.raw.length);\n                if (token.raw.slice(-1) !== '_') { // Track prevChar before string of ____ started\n                    prevChar = token.raw.slice(-1);\n                }\n                keepPrevChar = true;\n                lastToken = tokens[tokens.length - 1];\n                if (lastToken && lastToken.type === 'text') {\n                    lastToken.raw += token.raw;\n                    lastToken.text += token.text;\n                }\n                else {\n                    tokens.push(token);\n                }\n                continue;\n            }\n            if (src) {\n                const errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n                if (this.options.silent) {\n                    console.error(errMsg);\n                    break;\n                }\n                else {\n                    throw new Error(errMsg);\n                }\n            }\n        }\n        return tokens;\n    }\n}\n\n/**\n * Renderer\n */\nclass _Renderer {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    code(code, infostring, escaped) {\n        const lang = (infostring || '').match(/^\\S*/)?.[0];\n        code = code.replace(/\\n$/, '') + '\\n';\n        if (!lang) {\n            return '<pre><code>'\n                + (escaped ? code : escape(code, true))\n                + '</code></pre>\\n';\n        }\n        return '<pre><code class=\"language-'\n            + escape(lang)\n            + '\">'\n            + (escaped ? code : escape(code, true))\n            + '</code></pre>\\n';\n    }\n    blockquote(quote) {\n        return `<blockquote>\\n${quote}</blockquote>\\n`;\n    }\n    html(html, block) {\n        return html;\n    }\n    heading(text, level, raw) {\n        // ignore IDs\n        return `<h${level}>${text}</h${level}>\\n`;\n    }\n    hr() {\n        return '<hr>\\n';\n    }\n    list(body, ordered, start) {\n        const type = ordered ? 'ol' : 'ul';\n        const startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n        return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n    listitem(text, task, checked) {\n        return `<li>${text}</li>\\n`;\n    }\n    checkbox(checked) {\n        return '<input '\n            + (checked ? 'checked=\"\" ' : '')\n            + 'disabled=\"\" type=\"checkbox\">';\n    }\n    paragraph(text) {\n        return `<p>${text}</p>\\n`;\n    }\n    table(header, body) {\n        if (body)\n            body = `<tbody>${body}</tbody>`;\n        return '<table>\\n'\n            + '<thead>\\n'\n            + header\n            + '</thead>\\n'\n            + body\n            + '</table>\\n';\n    }\n    tablerow(content) {\n        return `<tr>\\n${content}</tr>\\n`;\n    }\n    tablecell(content, flags) {\n        const type = flags.header ? 'th' : 'td';\n        const tag = flags.align\n            ? `<${type} align=\"${flags.align}\">`\n            : `<${type}>`;\n        return tag + content + `</${type}>\\n`;\n    }\n    /**\n     * span level renderer\n     */\n    strong(text) {\n        return `<strong>${text}</strong>`;\n    }\n    em(text) {\n        return `<em>${text}</em>`;\n    }\n    codespan(text) {\n        return `<code>${text}</code>`;\n    }\n    br() {\n        return '<br>';\n    }\n    del(text) {\n        return `<del>${text}</del>`;\n    }\n    link(href, title, text) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = '<a href=\"' + href + '\"';\n        if (title) {\n            out += ' title=\"' + title + '\"';\n        }\n        out += '>' + text + '</a>';\n        return out;\n    }\n    image(href, title, text) {\n        const cleanHref = cleanUrl(href);\n        if (cleanHref === null) {\n            return text;\n        }\n        href = cleanHref;\n        let out = `<img src=\"${href}\" alt=\"${text}\"`;\n        if (title) {\n            out += ` title=\"${title}\"`;\n        }\n        out += '>';\n        return out;\n    }\n    text(text) {\n        return text;\n    }\n}\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\nclass _TextRenderer {\n    // no need for block level renderers\n    strong(text) {\n        return text;\n    }\n    em(text) {\n        return text;\n    }\n    codespan(text) {\n        return text;\n    }\n    del(text) {\n        return text;\n    }\n    html(text) {\n        return text;\n    }\n    text(text) {\n        return text;\n    }\n    link(href, title, text) {\n        return '' + text;\n    }\n    image(href, title, text) {\n        return '' + text;\n    }\n    br() {\n        return '';\n    }\n}\n\n/**\n * Parsing & Compiling\n */\nclass _Parser {\n    options;\n    renderer;\n    textRenderer;\n    constructor(options) {\n        this.options = options || _defaults;\n        this.options.renderer = this.options.renderer || new _Renderer();\n        this.renderer = this.options.renderer;\n        this.renderer.options = this.options;\n        this.textRenderer = new _TextRenderer();\n    }\n    /**\n     * Static Parse Method\n     */\n    static parse(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    static parseInline(tokens, options) {\n        const parser = new _Parser(options);\n        return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    parse(tokens, top = true) {\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                const genericToken = token;\n                const ret = this.options.extensions.renderers[genericToken.type].call({ parser: this }, genericToken);\n                if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(genericToken.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            switch (token.type) {\n                case 'space': {\n                    continue;\n                }\n                case 'hr': {\n                    out += this.renderer.hr();\n                    continue;\n                }\n                case 'heading': {\n                    const headingToken = token;\n                    out += this.renderer.heading(this.parseInline(headingToken.tokens), headingToken.depth, unescape(this.parseInline(headingToken.tokens, this.textRenderer)));\n                    continue;\n                }\n                case 'code': {\n                    const codeToken = token;\n                    out += this.renderer.code(codeToken.text, codeToken.lang, !!codeToken.escaped);\n                    continue;\n                }\n                case 'table': {\n                    const tableToken = token;\n                    let header = '';\n                    // header\n                    let cell = '';\n                    for (let j = 0; j < tableToken.header.length; j++) {\n                        cell += this.renderer.tablecell(this.parseInline(tableToken.header[j].tokens), { header: true, align: tableToken.align[j] });\n                    }\n                    header += this.renderer.tablerow(cell);\n                    let body = '';\n                    for (let j = 0; j < tableToken.rows.length; j++) {\n                        const row = tableToken.rows[j];\n                        cell = '';\n                        for (let k = 0; k < row.length; k++) {\n                            cell += this.renderer.tablecell(this.parseInline(row[k].tokens), { header: false, align: tableToken.align[k] });\n                        }\n                        body += this.renderer.tablerow(cell);\n                    }\n                    out += this.renderer.table(header, body);\n                    continue;\n                }\n                case 'blockquote': {\n                    const blockquoteToken = token;\n                    const body = this.parse(blockquoteToken.tokens);\n                    out += this.renderer.blockquote(body);\n                    continue;\n                }\n                case 'list': {\n                    const listToken = token;\n                    const ordered = listToken.ordered;\n                    const start = listToken.start;\n                    const loose = listToken.loose;\n                    let body = '';\n                    for (let j = 0; j < listToken.items.length; j++) {\n                        const item = listToken.items[j];\n                        const checked = item.checked;\n                        const task = item.task;\n                        let itemBody = '';\n                        if (item.task) {\n                            const checkbox = this.renderer.checkbox(!!checked);\n                            if (loose) {\n                                if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                                    item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n                                    if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                                    }\n                                }\n                                else {\n                                    item.tokens.unshift({\n                                        type: 'text',\n                                        text: checkbox + ' '\n                                    });\n                                }\n                            }\n                            else {\n                                itemBody += checkbox + ' ';\n                            }\n                        }\n                        itemBody += this.parse(item.tokens, loose);\n                        body += this.renderer.listitem(itemBody, task, !!checked);\n                    }\n                    out += this.renderer.list(body, ordered, start);\n                    continue;\n                }\n                case 'html': {\n                    const htmlToken = token;\n                    out += this.renderer.html(htmlToken.text, htmlToken.block);\n                    continue;\n                }\n                case 'paragraph': {\n                    const paragraphToken = token;\n                    out += this.renderer.paragraph(this.parseInline(paragraphToken.tokens));\n                    continue;\n                }\n                case 'text': {\n                    let textToken = token;\n                    let body = textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text;\n                    while (i + 1 < tokens.length && tokens[i + 1].type === 'text') {\n                        textToken = tokens[++i];\n                        body += '\\n' + (textToken.tokens ? this.parseInline(textToken.tokens) : textToken.text);\n                    }\n                    out += top ? this.renderer.paragraph(body) : body;\n                    continue;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    parseInline(tokens, renderer) {\n        renderer = renderer || this.renderer;\n        let out = '';\n        for (let i = 0; i < tokens.length; i++) {\n            const token = tokens[i];\n            // Run any renderer extensions\n            if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n                const ret = this.options.extensions.renderers[token.type].call({ parser: this }, token);\n                if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n                    out += ret || '';\n                    continue;\n                }\n            }\n            switch (token.type) {\n                case 'escape': {\n                    const escapeToken = token;\n                    out += renderer.text(escapeToken.text);\n                    break;\n                }\n                case 'html': {\n                    const tagToken = token;\n                    out += renderer.html(tagToken.text);\n                    break;\n                }\n                case 'link': {\n                    const linkToken = token;\n                    out += renderer.link(linkToken.href, linkToken.title, this.parseInline(linkToken.tokens, renderer));\n                    break;\n                }\n                case 'image': {\n                    const imageToken = token;\n                    out += renderer.image(imageToken.href, imageToken.title, imageToken.text);\n                    break;\n                }\n                case 'strong': {\n                    const strongToken = token;\n                    out += renderer.strong(this.parseInline(strongToken.tokens, renderer));\n                    break;\n                }\n                case 'em': {\n                    const emToken = token;\n                    out += renderer.em(this.parseInline(emToken.tokens, renderer));\n                    break;\n                }\n                case 'codespan': {\n                    const codespanToken = token;\n                    out += renderer.codespan(codespanToken.text);\n                    break;\n                }\n                case 'br': {\n                    out += renderer.br();\n                    break;\n                }\n                case 'del': {\n                    const delToken = token;\n                    out += renderer.del(this.parseInline(delToken.tokens, renderer));\n                    break;\n                }\n                case 'text': {\n                    const textToken = token;\n                    out += renderer.text(textToken.text);\n                    break;\n                }\n                default: {\n                    const errMsg = 'Token with \"' + token.type + '\" type was not found.';\n                    if (this.options.silent) {\n                        console.error(errMsg);\n                        return '';\n                    }\n                    else {\n                        throw new Error(errMsg);\n                    }\n                }\n            }\n        }\n        return out;\n    }\n}\n\nclass _Hooks {\n    options;\n    constructor(options) {\n        this.options = options || _defaults;\n    }\n    static passThroughHooks = new Set([\n        'preprocess',\n        'postprocess'\n    ]);\n    /**\n     * Process markdown before marked\n     */\n    preprocess(markdown) {\n        return markdown;\n    }\n    /**\n     * Process HTML after marked is finished\n     */\n    postprocess(html) {\n        return html;\n    }\n}\n\nclass Marked {\n    defaults = _getDefaults();\n    options = this.setOptions;\n    parse = this.#parseMarkdown(_Lexer.lex, _Parser.parse);\n    parseInline = this.#parseMarkdown(_Lexer.lexInline, _Parser.parseInline);\n    Parser = _Parser;\n    Renderer = _Renderer;\n    TextRenderer = _TextRenderer;\n    Lexer = _Lexer;\n    Tokenizer = _Tokenizer;\n    Hooks = _Hooks;\n    constructor(...args) {\n        this.use(...args);\n    }\n    /**\n     * Run callback for every token\n     */\n    walkTokens(tokens, callback) {\n        let values = [];\n        for (const token of tokens) {\n            values = values.concat(callback.call(this, token));\n            switch (token.type) {\n                case 'table': {\n                    const tableToken = token;\n                    for (const cell of tableToken.header) {\n                        values = values.concat(this.walkTokens(cell.tokens, callback));\n                    }\n                    for (const row of tableToken.rows) {\n                        for (const cell of row) {\n                            values = values.concat(this.walkTokens(cell.tokens, callback));\n                        }\n                    }\n                    break;\n                }\n                case 'list': {\n                    const listToken = token;\n                    values = values.concat(this.walkTokens(listToken.items, callback));\n                    break;\n                }\n                default: {\n                    const genericToken = token;\n                    if (this.defaults.extensions?.childTokens?.[genericToken.type]) {\n                        this.defaults.extensions.childTokens[genericToken.type].forEach((childTokens) => {\n                            values = values.concat(this.walkTokens(genericToken[childTokens], callback));\n                        });\n                    }\n                    else if (genericToken.tokens) {\n                        values = values.concat(this.walkTokens(genericToken.tokens, callback));\n                    }\n                }\n            }\n        }\n        return values;\n    }\n    use(...args) {\n        const extensions = this.defaults.extensions || { renderers: {}, childTokens: {} };\n        args.forEach((pack) => {\n            // copy options to new object\n            const opts = { ...pack };\n            // set async to true if it was set to true before\n            opts.async = this.defaults.async || opts.async || false;\n            // ==-- Parse \"addon\" extensions --== //\n            if (pack.extensions) {\n                pack.extensions.forEach((ext) => {\n                    if (!ext.name) {\n                        throw new Error('extension name required');\n                    }\n                    if ('renderer' in ext) { // Renderer extensions\n                        const prevRenderer = extensions.renderers[ext.name];\n                        if (prevRenderer) {\n                            // Replace extension with func to run new extension but fall back if false\n                            extensions.renderers[ext.name] = function (...args) {\n                                let ret = ext.renderer.apply(this, args);\n                                if (ret === false) {\n                                    ret = prevRenderer.apply(this, args);\n                                }\n                                return ret;\n                            };\n                        }\n                        else {\n                            extensions.renderers[ext.name] = ext.renderer;\n                        }\n                    }\n                    if ('tokenizer' in ext) { // Tokenizer Extensions\n                        if (!ext.level || (ext.level !== 'block' && ext.level !== 'inline')) {\n                            throw new Error(\"extension level must be 'block' or 'inline'\");\n                        }\n                        const extLevel = extensions[ext.level];\n                        if (extLevel) {\n                            extLevel.unshift(ext.tokenizer);\n                        }\n                        else {\n                            extensions[ext.level] = [ext.tokenizer];\n                        }\n                        if (ext.start) { // Function to check for start of token\n                            if (ext.level === 'block') {\n                                if (extensions.startBlock) {\n                                    extensions.startBlock.push(ext.start);\n                                }\n                                else {\n                                    extensions.startBlock = [ext.start];\n                                }\n                            }\n                            else if (ext.level === 'inline') {\n                                if (extensions.startInline) {\n                                    extensions.startInline.push(ext.start);\n                                }\n                                else {\n                                    extensions.startInline = [ext.start];\n                                }\n                            }\n                        }\n                    }\n                    if ('childTokens' in ext && ext.childTokens) { // Child tokens to be visited by walkTokens\n                        extensions.childTokens[ext.name] = ext.childTokens;\n                    }\n                });\n                opts.extensions = extensions;\n            }\n            // ==-- Parse \"overwrite\" extensions --== //\n            if (pack.renderer) {\n                const renderer = this.defaults.renderer || new _Renderer(this.defaults);\n                for (const prop in pack.renderer) {\n                    const rendererFunc = pack.renderer[prop];\n                    const rendererKey = prop;\n                    const prevRenderer = renderer[rendererKey];\n                    // Replace renderer with func to run extension, but fall back if false\n                    renderer[rendererKey] = (...args) => {\n                        let ret = rendererFunc.apply(renderer, args);\n                        if (ret === false) {\n                            ret = prevRenderer.apply(renderer, args);\n                        }\n                        return ret || '';\n                    };\n                }\n                opts.renderer = renderer;\n            }\n            if (pack.tokenizer) {\n                const tokenizer = this.defaults.tokenizer || new _Tokenizer(this.defaults);\n                for (const prop in pack.tokenizer) {\n                    const tokenizerFunc = pack.tokenizer[prop];\n                    const tokenizerKey = prop;\n                    const prevTokenizer = tokenizer[tokenizerKey];\n                    // Replace tokenizer with func to run extension, but fall back if false\n                    tokenizer[tokenizerKey] = (...args) => {\n                        let ret = tokenizerFunc.apply(tokenizer, args);\n                        if (ret === false) {\n                            ret = prevTokenizer.apply(tokenizer, args);\n                        }\n                        return ret;\n                    };\n                }\n                opts.tokenizer = tokenizer;\n            }\n            // ==-- Parse Hooks extensions --== //\n            if (pack.hooks) {\n                const hooks = this.defaults.hooks || new _Hooks();\n                for (const prop in pack.hooks) {\n                    const hooksFunc = pack.hooks[prop];\n                    const hooksKey = prop;\n                    const prevHook = hooks[hooksKey];\n                    if (_Hooks.passThroughHooks.has(prop)) {\n                        hooks[hooksKey] = (arg) => {\n                            if (this.defaults.async) {\n                                return Promise.resolve(hooksFunc.call(hooks, arg)).then(ret => {\n                                    return prevHook.call(hooks, ret);\n                                });\n                            }\n                            const ret = hooksFunc.call(hooks, arg);\n                            return prevHook.call(hooks, ret);\n                        };\n                    }\n                    else {\n                        hooks[hooksKey] = (...args) => {\n                            let ret = hooksFunc.apply(hooks, args);\n                            if (ret === false) {\n                                ret = prevHook.apply(hooks, args);\n                            }\n                            return ret;\n                        };\n                    }\n                }\n                opts.hooks = hooks;\n            }\n            // ==-- Parse WalkTokens extensions --== //\n            if (pack.walkTokens) {\n                const walkTokens = this.defaults.walkTokens;\n                const packWalktokens = pack.walkTokens;\n                opts.walkTokens = function (token) {\n                    let values = [];\n                    values.push(packWalktokens.call(this, token));\n                    if (walkTokens) {\n                        values = values.concat(walkTokens.call(this, token));\n                    }\n                    return values;\n                };\n            }\n            this.defaults = { ...this.defaults, ...opts };\n        });\n        return this;\n    }\n    setOptions(opt) {\n        this.defaults = { ...this.defaults, ...opt };\n        return this;\n    }\n    lexer(src, options) {\n        return _Lexer.lex(src, options ?? this.defaults);\n    }\n    parser(tokens, options) {\n        return _Parser.parse(tokens, options ?? this.defaults);\n    }\n    #parseMarkdown(lexer, parser) {\n        return (src, options) => {\n            const origOpt = { ...options };\n            const opt = { ...this.defaults, ...origOpt };\n            // Show warning if an extension set async to true but the parse was called with async: false\n            if (this.defaults.async === true && origOpt.async === false) {\n                if (!opt.silent) {\n                    console.warn('marked(): The async option was set to true by an extension. The async: false option sent to parse will be ignored.');\n                }\n                opt.async = true;\n            }\n            const throwError = this.#onError(!!opt.silent, !!opt.async);\n            // throw error in case of non string input\n            if (typeof src === 'undefined' || src === null) {\n                return throwError(new Error('marked(): input parameter is undefined or null'));\n            }\n            if (typeof src !== 'string') {\n                return throwError(new Error('marked(): input parameter is of type '\n                    + Object.prototype.toString.call(src) + ', string expected'));\n            }\n            if (opt.hooks) {\n                opt.hooks.options = opt;\n            }\n            if (opt.async) {\n                return Promise.resolve(opt.hooks ? opt.hooks.preprocess(src) : src)\n                    .then(src => lexer(src, opt))\n                    .then(tokens => opt.walkTokens ? Promise.all(this.walkTokens(tokens, opt.walkTokens)).then(() => tokens) : tokens)\n                    .then(tokens => parser(tokens, opt))\n                    .then(html => opt.hooks ? opt.hooks.postprocess(html) : html)\n                    .catch(throwError);\n            }\n            try {\n                if (opt.hooks) {\n                    src = opt.hooks.preprocess(src);\n                }\n                const tokens = lexer(src, opt);\n                if (opt.walkTokens) {\n                    this.walkTokens(tokens, opt.walkTokens);\n                }\n                let html = parser(tokens, opt);\n                if (opt.hooks) {\n                    html = opt.hooks.postprocess(html);\n                }\n                return html;\n            }\n            catch (e) {\n                return throwError(e);\n            }\n        };\n    }\n    #onError(silent, async) {\n        return (e) => {\n            e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n            if (silent) {\n                const msg = '<p>An error occurred:</p><pre>'\n                    + escape(e.message + '', true)\n                    + '</pre>';\n                if (async) {\n                    return Promise.resolve(msg);\n                }\n                return msg;\n            }\n            if (async) {\n                return Promise.reject(e);\n            }\n            throw e;\n        };\n    }\n}\n\nconst markedInstance = new Marked();\nfunction marked(src, opt) {\n    return markedInstance.parse(src, opt);\n}\n/**\n * Sets the default options.\n *\n * @param options Hash of options\n */\nmarked.options =\n    marked.setOptions = function (options) {\n        markedInstance.setOptions(options);\n        marked.defaults = markedInstance.defaults;\n        changeDefaults(marked.defaults);\n        return marked;\n    };\n/**\n * Gets the original marked default options.\n */\nmarked.getDefaults = _getDefaults;\nmarked.defaults = _defaults;\n/**\n * Use Extension\n */\nmarked.use = function (...args) {\n    markedInstance.use(...args);\n    marked.defaults = markedInstance.defaults;\n    changeDefaults(marked.defaults);\n    return marked;\n};\n/**\n * Run callback for every token\n */\nmarked.walkTokens = function (tokens, callback) {\n    return markedInstance.walkTokens(tokens, callback);\n};\n/**\n * Compiles markdown to HTML without enclosing `p` tag.\n *\n * @param src String of markdown source to be compiled\n * @param options Hash of options\n * @return String of compiled HTML\n */\nmarked.parseInline = markedInstance.parseInline;\n/**\n * Expose\n */\nmarked.Parser = _Parser;\nmarked.parser = _Parser.parse;\nmarked.Renderer = _Renderer;\nmarked.TextRenderer = _TextRenderer;\nmarked.Lexer = _Lexer;\nmarked.lexer = _Lexer.lex;\nmarked.Tokenizer = _Tokenizer;\nmarked.Hooks = _Hooks;\nmarked.parse = marked;\nconst options = marked.options;\nconst setOptions = marked.setOptions;\nconst use = marked.use;\nconst walkTokens = marked.walkTokens;\nconst parseInline = marked.parseInline;\nconst parse = marked;\nconst parser = _Parser.parse;\nconst lexer = _Lexer.lex;\n\nexport { _Hooks as Hooks, _Lexer as Lexer, Marked, _Parser as Parser, _Renderer as Renderer, _TextRenderer as TextRenderer, _Tokenizer as Tokenizer, _defaults as defaults, _getDefaults as getDefaults, lexer, marked, options, parse, parseInline, parser, setOptions, use, walkTokens };\n//# sourceMappingURL=marked.esm.js.map\n","/*! @license DOMPurify 3.2.6 | (c) Cure53 and other contributors | Released under the Apache license 2.0 and Mozilla Public License 2.0 | github.com/cure53/DOMPurify/blob/3.2.6/LICENSE */\n\nconst {\n  entries,\n  setPrototypeOf,\n  isFrozen,\n  getPrototypeOf,\n  getOwnPropertyDescriptor\n} = Object;\nlet {\n  freeze,\n  seal,\n  create\n} = Object; // eslint-disable-line import/no-mutable-exports\nlet {\n  apply,\n  construct\n} = typeof Reflect !== 'undefined' && Reflect;\nif (!freeze) {\n  freeze = function freeze(x) {\n    return x;\n  };\n}\nif (!seal) {\n  seal = function seal(x) {\n    return x;\n  };\n}\nif (!apply) {\n  apply = function apply(fun, thisValue, args) {\n    return fun.apply(thisValue, args);\n  };\n}\nif (!construct) {\n  construct = function construct(Func, args) {\n    return new Func(...args);\n  };\n}\nconst arrayForEach = unapply(Array.prototype.forEach);\nconst arrayLastIndexOf = unapply(Array.prototype.lastIndexOf);\nconst arrayPop = unapply(Array.prototype.pop);\nconst arrayPush = unapply(Array.prototype.push);\nconst arraySplice = unapply(Array.prototype.splice);\nconst stringToLowerCase = unapply(String.prototype.toLowerCase);\nconst stringToString = unapply(String.prototype.toString);\nconst stringMatch = unapply(String.prototype.match);\nconst stringReplace = unapply(String.prototype.replace);\nconst stringIndexOf = unapply(String.prototype.indexOf);\nconst stringTrim = unapply(String.prototype.trim);\nconst objectHasOwnProperty = unapply(Object.prototype.hasOwnProperty);\nconst regExpTest = unapply(RegExp.prototype.test);\nconst typeErrorCreate = unconstruct(TypeError);\n/**\n * Creates a new function that calls the given function with a specified thisArg and arguments.\n *\n * @param func - The function to be wrapped and called.\n * @returns A new function that calls the given function with a specified thisArg and arguments.\n */\nfunction unapply(func) {\n  return function (thisArg) {\n    if (thisArg instanceof RegExp) {\n      thisArg.lastIndex = 0;\n    }\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    return apply(func, thisArg, args);\n  };\n}\n/**\n * Creates a new function that constructs an instance of the given constructor function with the provided arguments.\n *\n * @param func - The constructor function to be wrapped and called.\n * @returns A new function that constructs an instance of the given constructor function with the provided arguments.\n */\nfunction unconstruct(func) {\n  return function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return construct(func, args);\n  };\n}\n/**\n * Add properties to a lookup table\n *\n * @param set - The set to which elements will be added.\n * @param array - The array containing elements to be added to the set.\n * @param transformCaseFunc - An optional function to transform the case of each element before adding to the set.\n * @returns The modified set with added elements.\n */\nfunction addToSet(set, array) {\n  let transformCaseFunc = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : stringToLowerCase;\n  if (setPrototypeOf) {\n    // Make 'in' and truthy checks like Boolean(set.constructor)\n    // independent of any properties defined on Object.prototype.\n    // Prevent prototype setters from intercepting set as a this value.\n    setPrototypeOf(set, null);\n  }\n  let l = array.length;\n  while (l--) {\n    let element = array[l];\n    if (typeof element === 'string') {\n      const lcElement = transformCaseFunc(element);\n      if (lcElement !== element) {\n        // Config presets (e.g. tags.js, attrs.js) are immutable.\n        if (!isFrozen(array)) {\n          array[l] = lcElement;\n        }\n        element = lcElement;\n      }\n    }\n    set[element] = true;\n  }\n  return set;\n}\n/**\n * Clean up an array to harden against CSPP\n *\n * @param array - The array to be cleaned.\n * @returns The cleaned version of the array\n */\nfunction cleanArray(array) {\n  for (let index = 0; index < array.length; index++) {\n    const isPropertyExist = objectHasOwnProperty(array, index);\n    if (!isPropertyExist) {\n      array[index] = null;\n    }\n  }\n  return array;\n}\n/**\n * Shallow clone an object\n *\n * @param object - The object to be cloned.\n * @returns A new object that copies the original.\n */\nfunction clone(object) {\n  const newObject = create(null);\n  for (const [property, value] of entries(object)) {\n    const isPropertyExist = objectHasOwnProperty(object, property);\n    if (isPropertyExist) {\n      if (Array.isArray(value)) {\n        newObject[property] = cleanArray(value);\n      } else if (value && typeof value === 'object' && value.constructor === Object) {\n        newObject[property] = clone(value);\n      } else {\n        newObject[property] = value;\n      }\n    }\n  }\n  return newObject;\n}\n/**\n * This method automatically checks if the prop is function or getter and behaves accordingly.\n *\n * @param object - The object to look up the getter function in its prototype chain.\n * @param prop - The property name for which to find the getter function.\n * @returns The getter function found in the prototype chain or a fallback function.\n */\nfunction lookupGetter(object, prop) {\n  while (object !== null) {\n    const desc = getOwnPropertyDescriptor(object, prop);\n    if (desc) {\n      if (desc.get) {\n        return unapply(desc.get);\n      }\n      if (typeof desc.value === 'function') {\n        return unapply(desc.value);\n      }\n    }\n    object = getPrototypeOf(object);\n  }\n  function fallbackValue() {\n    return null;\n  }\n  return fallbackValue;\n}\n\nconst html$1 = freeze(['a', 'abbr', 'acronym', 'address', 'area', 'article', 'aside', 'audio', 'b', 'bdi', 'bdo', 'big', 'blink', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'center', 'cite', 'code', 'col', 'colgroup', 'content', 'data', 'datalist', 'dd', 'decorator', 'del', 'details', 'dfn', 'dialog', 'dir', 'div', 'dl', 'dt', 'element', 'em', 'fieldset', 'figcaption', 'figure', 'font', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hgroup', 'hr', 'html', 'i', 'img', 'input', 'ins', 'kbd', 'label', 'legend', 'li', 'main', 'map', 'mark', 'marquee', 'menu', 'menuitem', 'meter', 'nav', 'nobr', 'ol', 'optgroup', 'option', 'output', 'p', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'section', 'select', 'shadow', 'small', 'source', 'spacer', 'span', 'strike', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'template', 'textarea', 'tfoot', 'th', 'thead', 'time', 'tr', 'track', 'tt', 'u', 'ul', 'var', 'video', 'wbr']);\nconst svg$1 = freeze(['svg', 'a', 'altglyph', 'altglyphdef', 'altglyphitem', 'animatecolor', 'animatemotion', 'animatetransform', 'circle', 'clippath', 'defs', 'desc', 'ellipse', 'filter', 'font', 'g', 'glyph', 'glyphref', 'hkern', 'image', 'line', 'lineargradient', 'marker', 'mask', 'metadata', 'mpath', 'path', 'pattern', 'polygon', 'polyline', 'radialgradient', 'rect', 'stop', 'style', 'switch', 'symbol', 'text', 'textpath', 'title', 'tref', 'tspan', 'view', 'vkern']);\nconst svgFilters = freeze(['feBlend', 'feColorMatrix', 'feComponentTransfer', 'feComposite', 'feConvolveMatrix', 'feDiffuseLighting', 'feDisplacementMap', 'feDistantLight', 'feDropShadow', 'feFlood', 'feFuncA', 'feFuncB', 'feFuncG', 'feFuncR', 'feGaussianBlur', 'feImage', 'feMerge', 'feMergeNode', 'feMorphology', 'feOffset', 'fePointLight', 'feSpecularLighting', 'feSpotLight', 'feTile', 'feTurbulence']);\n// List of SVG elements that are disallowed by default.\n// We still need to know them so that we can do namespace\n// checks properly in case one wants to add them to\n// allow-list.\nconst svgDisallowed = freeze(['animate', 'color-profile', 'cursor', 'discard', 'font-face', 'font-face-format', 'font-face-name', 'font-face-src', 'font-face-uri', 'foreignobject', 'hatch', 'hatchpath', 'mesh', 'meshgradient', 'meshpatch', 'meshrow', 'missing-glyph', 'script', 'set', 'solidcolor', 'unknown', 'use']);\nconst mathMl$1 = freeze(['math', 'menclose', 'merror', 'mfenced', 'mfrac', 'mglyph', 'mi', 'mlabeledtr', 'mmultiscripts', 'mn', 'mo', 'mover', 'mpadded', 'mphantom', 'mroot', 'mrow', 'ms', 'mspace', 'msqrt', 'mstyle', 'msub', 'msup', 'msubsup', 'mtable', 'mtd', 'mtext', 'mtr', 'munder', 'munderover', 'mprescripts']);\n// Similarly to SVG, we want to know all MathML elements,\n// even those that we disallow by default.\nconst mathMlDisallowed = freeze(['maction', 'maligngroup', 'malignmark', 'mlongdiv', 'mscarries', 'mscarry', 'msgroup', 'mstack', 'msline', 'msrow', 'semantics', 'annotation', 'annotation-xml', 'mprescripts', 'none']);\nconst text = freeze(['#text']);\n\nconst html = freeze(['accept', 'action', 'align', 'alt', 'autocapitalize', 'autocomplete', 'autopictureinpicture', 'autoplay', 'background', 'bgcolor', 'border', 'capture', 'cellpadding', 'cellspacing', 'checked', 'cite', 'class', 'clear', 'color', 'cols', 'colspan', 'controls', 'controlslist', 'coords', 'crossorigin', 'datetime', 'decoding', 'default', 'dir', 'disabled', 'disablepictureinpicture', 'disableremoteplayback', 'download', 'draggable', 'enctype', 'enterkeyhint', 'face', 'for', 'headers', 'height', 'hidden', 'high', 'href', 'hreflang', 'id', 'inputmode', 'integrity', 'ismap', 'kind', 'label', 'lang', 'list', 'loading', 'loop', 'low', 'max', 'maxlength', 'media', 'method', 'min', 'minlength', 'multiple', 'muted', 'name', 'nonce', 'noshade', 'novalidate', 'nowrap', 'open', 'optimum', 'pattern', 'placeholder', 'playsinline', 'popover', 'popovertarget', 'popovertargetaction', 'poster', 'preload', 'pubdate', 'radiogroup', 'readonly', 'rel', 'required', 'rev', 'reversed', 'role', 'rows', 'rowspan', 'spellcheck', 'scope', 'selected', 'shape', 'size', 'sizes', 'span', 'srclang', 'start', 'src', 'srcset', 'step', 'style', 'summary', 'tabindex', 'title', 'translate', 'type', 'usemap', 'valign', 'value', 'width', 'wrap', 'xmlns', 'slot']);\nconst svg = freeze(['accent-height', 'accumulate', 'additive', 'alignment-baseline', 'amplitude', 'ascent', 'attributename', 'attributetype', 'azimuth', 'basefrequency', 'baseline-shift', 'begin', 'bias', 'by', 'class', 'clip', 'clippathunits', 'clip-path', 'clip-rule', 'color', 'color-interpolation', 'color-interpolation-filters', 'color-profile', 'color-rendering', 'cx', 'cy', 'd', 'dx', 'dy', 'diffuseconstant', 'direction', 'display', 'divisor', 'dur', 'edgemode', 'elevation', 'end', 'exponent', 'fill', 'fill-opacity', 'fill-rule', 'filter', 'filterunits', 'flood-color', 'flood-opacity', 'font-family', 'font-size', 'font-size-adjust', 'font-stretch', 'font-style', 'font-variant', 'font-weight', 'fx', 'fy', 'g1', 'g2', 'glyph-name', 'glyphref', 'gradientunits', 'gradienttransform', 'height', 'href', 'id', 'image-rendering', 'in', 'in2', 'intercept', 'k', 'k1', 'k2', 'k3', 'k4', 'kerning', 'keypoints', 'keysplines', 'keytimes', 'lang', 'lengthadjust', 'letter-spacing', 'kernelmatrix', 'kernelunitlength', 'lighting-color', 'local', 'marker-end', 'marker-mid', 'marker-start', 'markerheight', 'markerunits', 'markerwidth', 'maskcontentunits', 'maskunits', 'max', 'mask', 'media', 'method', 'mode', 'min', 'name', 'numoctaves', 'offset', 'operator', 'opacity', 'order', 'orient', 'orientation', 'origin', 'overflow', 'paint-order', 'path', 'pathlength', 'patterncontentunits', 'patterntransform', 'patternunits', 'points', 'preservealpha', 'preserveaspectratio', 'primitiveunits', 'r', 'rx', 'ry', 'radius', 'refx', 'refy', 'repeatcount', 'repeatdur', 'restart', 'result', 'rotate', 'scale', 'seed', 'shape-rendering', 'slope', 'specularconstant', 'specularexponent', 'spreadmethod', 'startoffset', 'stddeviation', 'stitchtiles', 'stop-color', 'stop-opacity', 'stroke-dasharray', 'stroke-dashoffset', 'stroke-linecap', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke', 'stroke-width', 'style', 'surfacescale', 'systemlanguage', 'tabindex', 'tablevalues', 'targetx', 'targety', 'transform', 'transform-origin', 'text-anchor', 'text-decoration', 'text-rendering', 'textlength', 'type', 'u1', 'u2', 'unicode', 'values', 'viewbox', 'visibility', 'version', 'vert-adv-y', 'vert-origin-x', 'vert-origin-y', 'width', 'word-spacing', 'wrap', 'writing-mode', 'xchannelselector', 'ychannelselector', 'x', 'x1', 'x2', 'xmlns', 'y', 'y1', 'y2', 'z', 'zoomandpan']);\nconst mathMl = freeze(['accent', 'accentunder', 'align', 'bevelled', 'close', 'columnsalign', 'columnlines', 'columnspan', 'denomalign', 'depth', 'dir', 'display', 'displaystyle', 'encoding', 'fence', 'frame', 'height', 'href', 'id', 'largeop', 'length', 'linethickness', 'lspace', 'lquote', 'mathbackground', 'mathcolor', 'mathsize', 'mathvariant', 'maxsize', 'minsize', 'movablelimits', 'notation', 'numalign', 'open', 'rowalign', 'rowlines', 'rowspacing', 'rowspan', 'rspace', 'rquote', 'scriptlevel', 'scriptminsize', 'scriptsizemultiplier', 'selection', 'separator', 'separators', 'stretchy', 'subscriptshift', 'supscriptshift', 'symmetric', 'voffset', 'width', 'xmlns']);\nconst xml = freeze(['xlink:href', 'xml:id', 'xlink:title', 'xml:space', 'xmlns:xlink']);\n\n// eslint-disable-next-line unicorn/better-regex\nconst MUSTACHE_EXPR = seal(/\\{\\{[\\w\\W]*|[\\w\\W]*\\}\\}/gm); // Specify template detection regex for SAFE_FOR_TEMPLATES mode\nconst ERB_EXPR = seal(/<%[\\w\\W]*|[\\w\\W]*%>/gm);\nconst TMPLIT_EXPR = seal(/\\$\\{[\\w\\W]*/gm); // eslint-disable-line unicorn/better-regex\nconst DATA_ATTR = seal(/^data-[\\-\\w.\\u00B7-\\uFFFF]+$/); // eslint-disable-line no-useless-escape\nconst ARIA_ATTR = seal(/^aria-[\\-\\w]+$/); // eslint-disable-line no-useless-escape\nconst IS_ALLOWED_URI = seal(/^(?:(?:(?:f|ht)tps?|mailto|tel|callto|sms|cid|xmpp|matrix):|[^a-z]|[a-z+.\\-]+(?:[^a-z+.\\-:]|$))/i // eslint-disable-line no-useless-escape\n);\nconst IS_SCRIPT_OR_DATA = seal(/^(?:\\w+script|data):/i);\nconst ATTR_WHITESPACE = seal(/[\\u0000-\\u0020\\u00A0\\u1680\\u180E\\u2000-\\u2029\\u205F\\u3000]/g // eslint-disable-line no-control-regex\n);\nconst DOCTYPE_NAME = seal(/^html$/i);\nconst CUSTOM_ELEMENT = seal(/^[a-z][.\\w]*(-[.\\w]+)+$/i);\n\nvar EXPRESSIONS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ARIA_ATTR: ARIA_ATTR,\n  ATTR_WHITESPACE: ATTR_WHITESPACE,\n  CUSTOM_ELEMENT: CUSTOM_ELEMENT,\n  DATA_ATTR: DATA_ATTR,\n  DOCTYPE_NAME: DOCTYPE_NAME,\n  ERB_EXPR: ERB_EXPR,\n  IS_ALLOWED_URI: IS_ALLOWED_URI,\n  IS_SCRIPT_OR_DATA: IS_SCRIPT_OR_DATA,\n  MUSTACHE_EXPR: MUSTACHE_EXPR,\n  TMPLIT_EXPR: TMPLIT_EXPR\n});\n\n/* eslint-disable @typescript-eslint/indent */\n// https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\nconst NODE_TYPE = {\n  element: 1,\n  attribute: 2,\n  text: 3,\n  cdataSection: 4,\n  entityReference: 5,\n  // Deprecated\n  entityNode: 6,\n  // Deprecated\n  progressingInstruction: 7,\n  comment: 8,\n  document: 9,\n  documentType: 10,\n  documentFragment: 11,\n  notation: 12 // Deprecated\n};\nconst getGlobal = function getGlobal() {\n  return typeof window === 'undefined' ? null : window;\n};\n/**\n * Creates a no-op policy for internal use only.\n * Don't export this function outside this module!\n * @param trustedTypes The policy factory.\n * @param purifyHostElement The Script element used to load DOMPurify (to determine policy name suffix).\n * @return The policy created (or null, if Trusted Types\n * are not supported or creating the policy failed).\n */\nconst _createTrustedTypesPolicy = function _createTrustedTypesPolicy(trustedTypes, purifyHostElement) {\n  if (typeof trustedTypes !== 'object' || typeof trustedTypes.createPolicy !== 'function') {\n    return null;\n  }\n  // Allow the callers to control the unique policy name\n  // by adding a data-tt-policy-suffix to the script element with the DOMPurify.\n  // Policy creation with duplicate names throws in Trusted Types.\n  let suffix = null;\n  const ATTR_NAME = 'data-tt-policy-suffix';\n  if (purifyHostElement && purifyHostElement.hasAttribute(ATTR_NAME)) {\n    suffix = purifyHostElement.getAttribute(ATTR_NAME);\n  }\n  const policyName = 'dompurify' + (suffix ? '#' + suffix : '');\n  try {\n    return trustedTypes.createPolicy(policyName, {\n      createHTML(html) {\n        return html;\n      },\n      createScriptURL(scriptUrl) {\n        return scriptUrl;\n      }\n    });\n  } catch (_) {\n    // Policy creation failed (most likely another DOMPurify script has\n    // already run). Skip creating the policy, as this will only cause errors\n    // if TT are enforced.\n    console.warn('TrustedTypes policy ' + policyName + ' could not be created.');\n    return null;\n  }\n};\nconst _createHooksMap = function _createHooksMap() {\n  return {\n    afterSanitizeAttributes: [],\n    afterSanitizeElements: [],\n    afterSanitizeShadowDOM: [],\n    beforeSanitizeAttributes: [],\n    beforeSanitizeElements: [],\n    beforeSanitizeShadowDOM: [],\n    uponSanitizeAttribute: [],\n    uponSanitizeElement: [],\n    uponSanitizeShadowNode: []\n  };\n};\nfunction createDOMPurify() {\n  let window = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : getGlobal();\n  const DOMPurify = root => createDOMPurify(root);\n  DOMPurify.version = '3.2.6';\n  DOMPurify.removed = [];\n  if (!window || !window.document || window.document.nodeType !== NODE_TYPE.document || !window.Element) {\n    // Not running in a browser, provide a factory function\n    // so that you can pass your own Window\n    DOMPurify.isSupported = false;\n    return DOMPurify;\n  }\n  let {\n    document\n  } = window;\n  const originalDocument = document;\n  const currentScript = originalDocument.currentScript;\n  const {\n    DocumentFragment,\n    HTMLTemplateElement,\n    Node,\n    Element,\n    NodeFilter,\n    NamedNodeMap = window.NamedNodeMap || window.MozNamedAttrMap,\n    HTMLFormElement,\n    DOMParser,\n    trustedTypes\n  } = window;\n  const ElementPrototype = Element.prototype;\n  const cloneNode = lookupGetter(ElementPrototype, 'cloneNode');\n  const remove = lookupGetter(ElementPrototype, 'remove');\n  const getNextSibling = lookupGetter(ElementPrototype, 'nextSibling');\n  const getChildNodes = lookupGetter(ElementPrototype, 'childNodes');\n  const getParentNode = lookupGetter(ElementPrototype, 'parentNode');\n  // As per issue #47, the web-components registry is inherited by a\n  // new document created via createHTMLDocument. As per the spec\n  // (http://w3c.github.io/webcomponents/spec/custom/#creating-and-passing-registries)\n  // a new empty registry is used when creating a template contents owner\n  // document, so we use that as our parent document to ensure nothing\n  // is inherited.\n  if (typeof HTMLTemplateElement === 'function') {\n    const template = document.createElement('template');\n    if (template.content && template.content.ownerDocument) {\n      document = template.content.ownerDocument;\n    }\n  }\n  let trustedTypesPolicy;\n  let emptyHTML = '';\n  const {\n    implementation,\n    createNodeIterator,\n    createDocumentFragment,\n    getElementsByTagName\n  } = document;\n  const {\n    importNode\n  } = originalDocument;\n  let hooks = _createHooksMap();\n  /**\n   * Expose whether this browser supports running the full DOMPurify.\n   */\n  DOMPurify.isSupported = typeof entries === 'function' && typeof getParentNode === 'function' && implementation && implementation.createHTMLDocument !== undefined;\n  const {\n    MUSTACHE_EXPR,\n    ERB_EXPR,\n    TMPLIT_EXPR,\n    DATA_ATTR,\n    ARIA_ATTR,\n    IS_SCRIPT_OR_DATA,\n    ATTR_WHITESPACE,\n    CUSTOM_ELEMENT\n  } = EXPRESSIONS;\n  let {\n    IS_ALLOWED_URI: IS_ALLOWED_URI$1\n  } = EXPRESSIONS;\n  /**\n   * We consider the elements and attributes below to be safe. Ideally\n   * don't add any new ones but feel free to remove unwanted ones.\n   */\n  /* allowed element names */\n  let ALLOWED_TAGS = null;\n  const DEFAULT_ALLOWED_TAGS = addToSet({}, [...html$1, ...svg$1, ...svgFilters, ...mathMl$1, ...text]);\n  /* Allowed attribute names */\n  let ALLOWED_ATTR = null;\n  const DEFAULT_ALLOWED_ATTR = addToSet({}, [...html, ...svg, ...mathMl, ...xml]);\n  /*\n   * Configure how DOMPurify should handle custom elements and their attributes as well as customized built-in elements.\n   * @property {RegExp|Function|null} tagNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any custom elements)\n   * @property {RegExp|Function|null} attributeNameCheck one of [null, regexPattern, predicate]. Default: `null` (disallow any attributes not on the allow list)\n   * @property {boolean} allowCustomizedBuiltInElements allow custom elements derived from built-ins if they pass CUSTOM_ELEMENT_HANDLING.tagNameCheck. Default: `false`.\n   */\n  let CUSTOM_ELEMENT_HANDLING = Object.seal(create(null, {\n    tagNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    attributeNameCheck: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: null\n    },\n    allowCustomizedBuiltInElements: {\n      writable: true,\n      configurable: false,\n      enumerable: true,\n      value: false\n    }\n  }));\n  /* Explicitly forbidden tags (overrides ALLOWED_TAGS/ADD_TAGS) */\n  let FORBID_TAGS = null;\n  /* Explicitly forbidden attributes (overrides ALLOWED_ATTR/ADD_ATTR) */\n  let FORBID_ATTR = null;\n  /* Decide if ARIA attributes are okay */\n  let ALLOW_ARIA_ATTR = true;\n  /* Decide if custom data attributes are okay */\n  let ALLOW_DATA_ATTR = true;\n  /* Decide if unknown protocols are okay */\n  let ALLOW_UNKNOWN_PROTOCOLS = false;\n  /* Decide if self-closing tags in attributes are allowed.\n   * Usually removed due to a mXSS issue in jQuery 3.0 */\n  let ALLOW_SELF_CLOSE_IN_ATTR = true;\n  /* Output should be safe for common template engines.\n   * This means, DOMPurify removes data attributes, mustaches and ERB\n   */\n  let SAFE_FOR_TEMPLATES = false;\n  /* Output should be safe even for XML used within HTML and alike.\n   * This means, DOMPurify removes comments when containing risky content.\n   */\n  let SAFE_FOR_XML = true;\n  /* Decide if document with <html>... should be returned */\n  let WHOLE_DOCUMENT = false;\n  /* Track whether config is already set on this instance of DOMPurify. */\n  let SET_CONFIG = false;\n  /* Decide if all elements (e.g. style, script) must be children of\n   * document.body. By default, browsers might move them to document.head */\n  let FORCE_BODY = false;\n  /* Decide if a DOM `HTMLBodyElement` should be returned, instead of a html\n   * string (or a TrustedHTML object if Trusted Types are supported).\n   * If `WHOLE_DOCUMENT` is enabled a `HTMLHtmlElement` will be returned instead\n   */\n  let RETURN_DOM = false;\n  /* Decide if a DOM `DocumentFragment` should be returned, instead of a html\n   * string  (or a TrustedHTML object if Trusted Types are supported) */\n  let RETURN_DOM_FRAGMENT = false;\n  /* Try to return a Trusted Type object instead of a string, return a string in\n   * case Trusted Types are not supported  */\n  let RETURN_TRUSTED_TYPE = false;\n  /* Output should be free from DOM clobbering attacks?\n   * This sanitizes markups named with colliding, clobberable built-in DOM APIs.\n   */\n  let SANITIZE_DOM = true;\n  /* Achieve full DOM Clobbering protection by isolating the namespace of named\n   * properties and JS variables, mitigating attacks that abuse the HTML/DOM spec rules.\n   *\n   * HTML/DOM spec rules that enable DOM Clobbering:\n   *   - Named Access on Window (§7.3.3)\n   *   - DOM Tree Accessors (§3.1.5)\n   *   - Form Element Parent-Child Relations (§4.10.3)\n   *   - Iframe srcdoc / Nested WindowProxies (§4.8.5)\n   *   - HTMLCollection (§4.2.10.2)\n   *\n   * Namespace isolation is implemented by prefixing `id` and `name` attributes\n   * with a constant string, i.e., `user-content-`\n   */\n  let SANITIZE_NAMED_PROPS = false;\n  const SANITIZE_NAMED_PROPS_PREFIX = 'user-content-';\n  /* Keep element content when removing element? */\n  let KEEP_CONTENT = true;\n  /* If a `Node` is passed to sanitize(), then performs sanitization in-place instead\n   * of importing it into a new Document and returning a sanitized copy */\n  let IN_PLACE = false;\n  /* Allow usage of profiles like html, svg and mathMl */\n  let USE_PROFILES = {};\n  /* Tags to ignore content of when KEEP_CONTENT is true */\n  let FORBID_CONTENTS = null;\n  const DEFAULT_FORBID_CONTENTS = addToSet({}, ['annotation-xml', 'audio', 'colgroup', 'desc', 'foreignobject', 'head', 'iframe', 'math', 'mi', 'mn', 'mo', 'ms', 'mtext', 'noembed', 'noframes', 'noscript', 'plaintext', 'script', 'style', 'svg', 'template', 'thead', 'title', 'video', 'xmp']);\n  /* Tags that are safe for data: URIs */\n  let DATA_URI_TAGS = null;\n  const DEFAULT_DATA_URI_TAGS = addToSet({}, ['audio', 'video', 'img', 'source', 'image', 'track']);\n  /* Attributes safe for values like \"javascript:\" */\n  let URI_SAFE_ATTRIBUTES = null;\n  const DEFAULT_URI_SAFE_ATTRIBUTES = addToSet({}, ['alt', 'class', 'for', 'id', 'label', 'name', 'pattern', 'placeholder', 'role', 'summary', 'title', 'value', 'style', 'xmlns']);\n  const MATHML_NAMESPACE = 'http://www.w3.org/1998/Math/MathML';\n  const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n  const HTML_NAMESPACE = 'http://www.w3.org/1999/xhtml';\n  /* Document namespace */\n  let NAMESPACE = HTML_NAMESPACE;\n  let IS_EMPTY_INPUT = false;\n  /* Allowed XHTML+XML namespaces */\n  let ALLOWED_NAMESPACES = null;\n  const DEFAULT_ALLOWED_NAMESPACES = addToSet({}, [MATHML_NAMESPACE, SVG_NAMESPACE, HTML_NAMESPACE], stringToString);\n  let MATHML_TEXT_INTEGRATION_POINTS = addToSet({}, ['mi', 'mo', 'mn', 'ms', 'mtext']);\n  let HTML_INTEGRATION_POINTS = addToSet({}, ['annotation-xml']);\n  // Certain elements are allowed in both SVG and HTML\n  // namespace. We need to specify them explicitly\n  // so that they don't get erroneously deleted from\n  // HTML namespace.\n  const COMMON_SVG_AND_HTML_ELEMENTS = addToSet({}, ['title', 'style', 'font', 'a', 'script']);\n  /* Parsing of strict XHTML documents */\n  let PARSER_MEDIA_TYPE = null;\n  const SUPPORTED_PARSER_MEDIA_TYPES = ['application/xhtml+xml', 'text/html'];\n  const DEFAULT_PARSER_MEDIA_TYPE = 'text/html';\n  let transformCaseFunc = null;\n  /* Keep a reference to config to pass to hooks */\n  let CONFIG = null;\n  /* Ideally, do not touch anything below this line */\n  /* ______________________________________________ */\n  const formElement = document.createElement('form');\n  const isRegexOrFunction = function isRegexOrFunction(testValue) {\n    return testValue instanceof RegExp || testValue instanceof Function;\n  };\n  /**\n   * _parseConfig\n   *\n   * @param cfg optional config literal\n   */\n  // eslint-disable-next-line complexity\n  const _parseConfig = function _parseConfig() {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (CONFIG && CONFIG === cfg) {\n      return;\n    }\n    /* Shield configuration object from tampering */\n    if (!cfg || typeof cfg !== 'object') {\n      cfg = {};\n    }\n    /* Shield configuration object from prototype pollution */\n    cfg = clone(cfg);\n    PARSER_MEDIA_TYPE =\n    // eslint-disable-next-line unicorn/prefer-includes\n    SUPPORTED_PARSER_MEDIA_TYPES.indexOf(cfg.PARSER_MEDIA_TYPE) === -1 ? DEFAULT_PARSER_MEDIA_TYPE : cfg.PARSER_MEDIA_TYPE;\n    // HTML tags and attributes are not case-sensitive, converting to lowercase. Keeping XHTML as is.\n    transformCaseFunc = PARSER_MEDIA_TYPE === 'application/xhtml+xml' ? stringToString : stringToLowerCase;\n    /* Set configuration parameters */\n    ALLOWED_TAGS = objectHasOwnProperty(cfg, 'ALLOWED_TAGS') ? addToSet({}, cfg.ALLOWED_TAGS, transformCaseFunc) : DEFAULT_ALLOWED_TAGS;\n    ALLOWED_ATTR = objectHasOwnProperty(cfg, 'ALLOWED_ATTR') ? addToSet({}, cfg.ALLOWED_ATTR, transformCaseFunc) : DEFAULT_ALLOWED_ATTR;\n    ALLOWED_NAMESPACES = objectHasOwnProperty(cfg, 'ALLOWED_NAMESPACES') ? addToSet({}, cfg.ALLOWED_NAMESPACES, stringToString) : DEFAULT_ALLOWED_NAMESPACES;\n    URI_SAFE_ATTRIBUTES = objectHasOwnProperty(cfg, 'ADD_URI_SAFE_ATTR') ? addToSet(clone(DEFAULT_URI_SAFE_ATTRIBUTES), cfg.ADD_URI_SAFE_ATTR, transformCaseFunc) : DEFAULT_URI_SAFE_ATTRIBUTES;\n    DATA_URI_TAGS = objectHasOwnProperty(cfg, 'ADD_DATA_URI_TAGS') ? addToSet(clone(DEFAULT_DATA_URI_TAGS), cfg.ADD_DATA_URI_TAGS, transformCaseFunc) : DEFAULT_DATA_URI_TAGS;\n    FORBID_CONTENTS = objectHasOwnProperty(cfg, 'FORBID_CONTENTS') ? addToSet({}, cfg.FORBID_CONTENTS, transformCaseFunc) : DEFAULT_FORBID_CONTENTS;\n    FORBID_TAGS = objectHasOwnProperty(cfg, 'FORBID_TAGS') ? addToSet({}, cfg.FORBID_TAGS, transformCaseFunc) : clone({});\n    FORBID_ATTR = objectHasOwnProperty(cfg, 'FORBID_ATTR') ? addToSet({}, cfg.FORBID_ATTR, transformCaseFunc) : clone({});\n    USE_PROFILES = objectHasOwnProperty(cfg, 'USE_PROFILES') ? cfg.USE_PROFILES : false;\n    ALLOW_ARIA_ATTR = cfg.ALLOW_ARIA_ATTR !== false; // Default true\n    ALLOW_DATA_ATTR = cfg.ALLOW_DATA_ATTR !== false; // Default true\n    ALLOW_UNKNOWN_PROTOCOLS = cfg.ALLOW_UNKNOWN_PROTOCOLS || false; // Default false\n    ALLOW_SELF_CLOSE_IN_ATTR = cfg.ALLOW_SELF_CLOSE_IN_ATTR !== false; // Default true\n    SAFE_FOR_TEMPLATES = cfg.SAFE_FOR_TEMPLATES || false; // Default false\n    SAFE_FOR_XML = cfg.SAFE_FOR_XML !== false; // Default true\n    WHOLE_DOCUMENT = cfg.WHOLE_DOCUMENT || false; // Default false\n    RETURN_DOM = cfg.RETURN_DOM || false; // Default false\n    RETURN_DOM_FRAGMENT = cfg.RETURN_DOM_FRAGMENT || false; // Default false\n    RETURN_TRUSTED_TYPE = cfg.RETURN_TRUSTED_TYPE || false; // Default false\n    FORCE_BODY = cfg.FORCE_BODY || false; // Default false\n    SANITIZE_DOM = cfg.SANITIZE_DOM !== false; // Default true\n    SANITIZE_NAMED_PROPS = cfg.SANITIZE_NAMED_PROPS || false; // Default false\n    KEEP_CONTENT = cfg.KEEP_CONTENT !== false; // Default true\n    IN_PLACE = cfg.IN_PLACE || false; // Default false\n    IS_ALLOWED_URI$1 = cfg.ALLOWED_URI_REGEXP || IS_ALLOWED_URI;\n    NAMESPACE = cfg.NAMESPACE || HTML_NAMESPACE;\n    MATHML_TEXT_INTEGRATION_POINTS = cfg.MATHML_TEXT_INTEGRATION_POINTS || MATHML_TEXT_INTEGRATION_POINTS;\n    HTML_INTEGRATION_POINTS = cfg.HTML_INTEGRATION_POINTS || HTML_INTEGRATION_POINTS;\n    CUSTOM_ELEMENT_HANDLING = cfg.CUSTOM_ELEMENT_HANDLING || {};\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.tagNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.tagNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && isRegexOrFunction(cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck)) {\n      CUSTOM_ELEMENT_HANDLING.attributeNameCheck = cfg.CUSTOM_ELEMENT_HANDLING.attributeNameCheck;\n    }\n    if (cfg.CUSTOM_ELEMENT_HANDLING && typeof cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements === 'boolean') {\n      CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements = cfg.CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements;\n    }\n    if (SAFE_FOR_TEMPLATES) {\n      ALLOW_DATA_ATTR = false;\n    }\n    if (RETURN_DOM_FRAGMENT) {\n      RETURN_DOM = true;\n    }\n    /* Parse profile info */\n    if (USE_PROFILES) {\n      ALLOWED_TAGS = addToSet({}, text);\n      ALLOWED_ATTR = [];\n      if (USE_PROFILES.html === true) {\n        addToSet(ALLOWED_TAGS, html$1);\n        addToSet(ALLOWED_ATTR, html);\n      }\n      if (USE_PROFILES.svg === true) {\n        addToSet(ALLOWED_TAGS, svg$1);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.svgFilters === true) {\n        addToSet(ALLOWED_TAGS, svgFilters);\n        addToSet(ALLOWED_ATTR, svg);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n      if (USE_PROFILES.mathMl === true) {\n        addToSet(ALLOWED_TAGS, mathMl$1);\n        addToSet(ALLOWED_ATTR, mathMl);\n        addToSet(ALLOWED_ATTR, xml);\n      }\n    }\n    /* Merge configuration parameters */\n    if (cfg.ADD_TAGS) {\n      if (ALLOWED_TAGS === DEFAULT_ALLOWED_TAGS) {\n        ALLOWED_TAGS = clone(ALLOWED_TAGS);\n      }\n      addToSet(ALLOWED_TAGS, cfg.ADD_TAGS, transformCaseFunc);\n    }\n    if (cfg.ADD_ATTR) {\n      if (ALLOWED_ATTR === DEFAULT_ALLOWED_ATTR) {\n        ALLOWED_ATTR = clone(ALLOWED_ATTR);\n      }\n      addToSet(ALLOWED_ATTR, cfg.ADD_ATTR, transformCaseFunc);\n    }\n    if (cfg.ADD_URI_SAFE_ATTR) {\n      addToSet(URI_SAFE_ATTRIBUTES, cfg.ADD_URI_SAFE_ATTR, transformCaseFunc);\n    }\n    if (cfg.FORBID_CONTENTS) {\n      if (FORBID_CONTENTS === DEFAULT_FORBID_CONTENTS) {\n        FORBID_CONTENTS = clone(FORBID_CONTENTS);\n      }\n      addToSet(FORBID_CONTENTS, cfg.FORBID_CONTENTS, transformCaseFunc);\n    }\n    /* Add #text in case KEEP_CONTENT is set to true */\n    if (KEEP_CONTENT) {\n      ALLOWED_TAGS['#text'] = true;\n    }\n    /* Add html, head and body to ALLOWED_TAGS in case WHOLE_DOCUMENT is true */\n    if (WHOLE_DOCUMENT) {\n      addToSet(ALLOWED_TAGS, ['html', 'head', 'body']);\n    }\n    /* Add tbody to ALLOWED_TAGS in case tables are permitted, see #286, #365 */\n    if (ALLOWED_TAGS.table) {\n      addToSet(ALLOWED_TAGS, ['tbody']);\n      delete FORBID_TAGS.tbody;\n    }\n    if (cfg.TRUSTED_TYPES_POLICY) {\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createHTML !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createHTML\" hook.');\n      }\n      if (typeof cfg.TRUSTED_TYPES_POLICY.createScriptURL !== 'function') {\n        throw typeErrorCreate('TRUSTED_TYPES_POLICY configuration option must provide a \"createScriptURL\" hook.');\n      }\n      // Overwrite existing TrustedTypes policy.\n      trustedTypesPolicy = cfg.TRUSTED_TYPES_POLICY;\n      // Sign local variables required by `sanitize`.\n      emptyHTML = trustedTypesPolicy.createHTML('');\n    } else {\n      // Uninitialized policy, attempt to initialize the internal dompurify policy.\n      if (trustedTypesPolicy === undefined) {\n        trustedTypesPolicy = _createTrustedTypesPolicy(trustedTypes, currentScript);\n      }\n      // If creating the internal policy succeeded sign internal variables.\n      if (trustedTypesPolicy !== null && typeof emptyHTML === 'string') {\n        emptyHTML = trustedTypesPolicy.createHTML('');\n      }\n    }\n    // Prevent further manipulation of configuration.\n    // Not available in IE8, Safari 5, etc.\n    if (freeze) {\n      freeze(cfg);\n    }\n    CONFIG = cfg;\n  };\n  /* Keep track of all possible SVG and MathML tags\n   * so that we can perform the namespace checks\n   * correctly. */\n  const ALL_SVG_TAGS = addToSet({}, [...svg$1, ...svgFilters, ...svgDisallowed]);\n  const ALL_MATHML_TAGS = addToSet({}, [...mathMl$1, ...mathMlDisallowed]);\n  /**\n   * @param element a DOM element whose namespace is being checked\n   * @returns Return false if the element has a\n   *  namespace that a spec-compliant parser would never\n   *  return. Return true otherwise.\n   */\n  const _checkValidNamespace = function _checkValidNamespace(element) {\n    let parent = getParentNode(element);\n    // In JSDOM, if we're inside shadow DOM, then parentNode\n    // can be null. We just simulate parent in this case.\n    if (!parent || !parent.tagName) {\n      parent = {\n        namespaceURI: NAMESPACE,\n        tagName: 'template'\n      };\n    }\n    const tagName = stringToLowerCase(element.tagName);\n    const parentTagName = stringToLowerCase(parent.tagName);\n    if (!ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return false;\n    }\n    if (element.namespaceURI === SVG_NAMESPACE) {\n      // The only way to switch from HTML namespace to SVG\n      // is via <svg>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'svg';\n      }\n      // The only way to switch from MathML to SVG is via`\n      // svg if parent is either <annotation-xml> or MathML\n      // text integration points.\n      if (parent.namespaceURI === MATHML_NAMESPACE) {\n        return tagName === 'svg' && (parentTagName === 'annotation-xml' || MATHML_TEXT_INTEGRATION_POINTS[parentTagName]);\n      }\n      // We only allow elements that are defined in SVG\n      // spec. All others are disallowed in SVG namespace.\n      return Boolean(ALL_SVG_TAGS[tagName]);\n    }\n    if (element.namespaceURI === MATHML_NAMESPACE) {\n      // The only way to switch from HTML namespace to MathML\n      // is via <math>. If it happens via any other tag, then\n      // it should be killed.\n      if (parent.namespaceURI === HTML_NAMESPACE) {\n        return tagName === 'math';\n      }\n      // The only way to switch from SVG to MathML is via\n      // <math> and HTML integration points\n      if (parent.namespaceURI === SVG_NAMESPACE) {\n        return tagName === 'math' && HTML_INTEGRATION_POINTS[parentTagName];\n      }\n      // We only allow elements that are defined in MathML\n      // spec. All others are disallowed in MathML namespace.\n      return Boolean(ALL_MATHML_TAGS[tagName]);\n    }\n    if (element.namespaceURI === HTML_NAMESPACE) {\n      // The only way to switch from SVG to HTML is via\n      // HTML integration points, and from MathML to HTML\n      // is via MathML text integration points\n      if (parent.namespaceURI === SVG_NAMESPACE && !HTML_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      if (parent.namespaceURI === MATHML_NAMESPACE && !MATHML_TEXT_INTEGRATION_POINTS[parentTagName]) {\n        return false;\n      }\n      // We disallow tags that are specific for MathML\n      // or SVG and should never appear in HTML namespace\n      return !ALL_MATHML_TAGS[tagName] && (COMMON_SVG_AND_HTML_ELEMENTS[tagName] || !ALL_SVG_TAGS[tagName]);\n    }\n    // For XHTML and XML documents that support custom namespaces\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && ALLOWED_NAMESPACES[element.namespaceURI]) {\n      return true;\n    }\n    // The code should never reach this place (this means\n    // that the element somehow got namespace that is not\n    // HTML, SVG, MathML or allowed via ALLOWED_NAMESPACES).\n    // Return false just in case.\n    return false;\n  };\n  /**\n   * _forceRemove\n   *\n   * @param node a DOM node\n   */\n  const _forceRemove = function _forceRemove(node) {\n    arrayPush(DOMPurify.removed, {\n      element: node\n    });\n    try {\n      // eslint-disable-next-line unicorn/prefer-dom-node-remove\n      getParentNode(node).removeChild(node);\n    } catch (_) {\n      remove(node);\n    }\n  };\n  /**\n   * _removeAttribute\n   *\n   * @param name an Attribute name\n   * @param element a DOM node\n   */\n  const _removeAttribute = function _removeAttribute(name, element) {\n    try {\n      arrayPush(DOMPurify.removed, {\n        attribute: element.getAttributeNode(name),\n        from: element\n      });\n    } catch (_) {\n      arrayPush(DOMPurify.removed, {\n        attribute: null,\n        from: element\n      });\n    }\n    element.removeAttribute(name);\n    // We void attribute values for unremovable \"is\" attributes\n    if (name === 'is') {\n      if (RETURN_DOM || RETURN_DOM_FRAGMENT) {\n        try {\n          _forceRemove(element);\n        } catch (_) {}\n      } else {\n        try {\n          element.setAttribute(name, '');\n        } catch (_) {}\n      }\n    }\n  };\n  /**\n   * _initDocument\n   *\n   * @param dirty - a string of dirty markup\n   * @return a DOM, filled with the dirty markup\n   */\n  const _initDocument = function _initDocument(dirty) {\n    /* Create a HTML document */\n    let doc = null;\n    let leadingWhitespace = null;\n    if (FORCE_BODY) {\n      dirty = '<remove></remove>' + dirty;\n    } else {\n      /* If FORCE_BODY isn't used, leading whitespace needs to be preserved manually */\n      const matches = stringMatch(dirty, /^[\\r\\n\\t ]+/);\n      leadingWhitespace = matches && matches[0];\n    }\n    if (PARSER_MEDIA_TYPE === 'application/xhtml+xml' && NAMESPACE === HTML_NAMESPACE) {\n      // Root of XHTML doc must contain xmlns declaration (see https://www.w3.org/TR/xhtml1/normative.html#strict)\n      dirty = '<html xmlns=\"http://www.w3.org/1999/xhtml\"><head></head><body>' + dirty + '</body></html>';\n    }\n    const dirtyPayload = trustedTypesPolicy ? trustedTypesPolicy.createHTML(dirty) : dirty;\n    /*\n     * Use the DOMParser API by default, fallback later if needs be\n     * DOMParser not work for svg when has multiple root element.\n     */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      try {\n        doc = new DOMParser().parseFromString(dirtyPayload, PARSER_MEDIA_TYPE);\n      } catch (_) {}\n    }\n    /* Use createHTMLDocument in case DOMParser is not available */\n    if (!doc || !doc.documentElement) {\n      doc = implementation.createDocument(NAMESPACE, 'template', null);\n      try {\n        doc.documentElement.innerHTML = IS_EMPTY_INPUT ? emptyHTML : dirtyPayload;\n      } catch (_) {\n        // Syntax error if dirtyPayload is invalid xml\n      }\n    }\n    const body = doc.body || doc.documentElement;\n    if (dirty && leadingWhitespace) {\n      body.insertBefore(document.createTextNode(leadingWhitespace), body.childNodes[0] || null);\n    }\n    /* Work on whole document or just its body */\n    if (NAMESPACE === HTML_NAMESPACE) {\n      return getElementsByTagName.call(doc, WHOLE_DOCUMENT ? 'html' : 'body')[0];\n    }\n    return WHOLE_DOCUMENT ? doc.documentElement : body;\n  };\n  /**\n   * Creates a NodeIterator object that you can use to traverse filtered lists of nodes or elements in a document.\n   *\n   * @param root The root element or node to start traversing on.\n   * @return The created NodeIterator\n   */\n  const _createNodeIterator = function _createNodeIterator(root) {\n    return createNodeIterator.call(root.ownerDocument || root, root,\n    // eslint-disable-next-line no-bitwise\n    NodeFilter.SHOW_ELEMENT | NodeFilter.SHOW_COMMENT | NodeFilter.SHOW_TEXT | NodeFilter.SHOW_PROCESSING_INSTRUCTION | NodeFilter.SHOW_CDATA_SECTION, null);\n  };\n  /**\n   * _isClobbered\n   *\n   * @param element element to check for clobbering attacks\n   * @return true if clobbered, false if safe\n   */\n  const _isClobbered = function _isClobbered(element) {\n    return element instanceof HTMLFormElement && (typeof element.nodeName !== 'string' || typeof element.textContent !== 'string' || typeof element.removeChild !== 'function' || !(element.attributes instanceof NamedNodeMap) || typeof element.removeAttribute !== 'function' || typeof element.setAttribute !== 'function' || typeof element.namespaceURI !== 'string' || typeof element.insertBefore !== 'function' || typeof element.hasChildNodes !== 'function');\n  };\n  /**\n   * Checks whether the given object is a DOM node.\n   *\n   * @param value object to check whether it's a DOM node\n   * @return true is object is a DOM node\n   */\n  const _isNode = function _isNode(value) {\n    return typeof Node === 'function' && value instanceof Node;\n  };\n  function _executeHooks(hooks, currentNode, data) {\n    arrayForEach(hooks, hook => {\n      hook.call(DOMPurify, currentNode, data, CONFIG);\n    });\n  }\n  /**\n   * _sanitizeElements\n   *\n   * @protect nodeName\n   * @protect textContent\n   * @protect removeChild\n   * @param currentNode to check for permission to exist\n   * @return true if node was killed, false if left alive\n   */\n  const _sanitizeElements = function _sanitizeElements(currentNode) {\n    let content = null;\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeElements, currentNode, null);\n    /* Check if element is clobbered or can clobber */\n    if (_isClobbered(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Now let's check the element's type and name */\n    const tagName = transformCaseFunc(currentNode.nodeName);\n    /* Execute a hook if present */\n    _executeHooks(hooks.uponSanitizeElement, currentNode, {\n      tagName,\n      allowedTags: ALLOWED_TAGS\n    });\n    /* Detect mXSS attempts abusing namespace confusion */\n    if (SAFE_FOR_XML && currentNode.hasChildNodes() && !_isNode(currentNode.firstElementChild) && regExpTest(/<[/\\w!]/g, currentNode.innerHTML) && regExpTest(/<[/\\w!]/g, currentNode.textContent)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any occurrence of processing instructions */\n    if (currentNode.nodeType === NODE_TYPE.progressingInstruction) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove any kind of possibly harmful comments */\n    if (SAFE_FOR_XML && currentNode.nodeType === NODE_TYPE.comment && regExpTest(/<[/\\w]/g, currentNode.data)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Remove element if anything forbids its presence */\n    if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n      /* Check if we have a custom element to handle */\n      if (!FORBID_TAGS[tagName] && _isBasicCustomElement(tagName)) {\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, tagName)) {\n          return false;\n        }\n        if (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(tagName)) {\n          return false;\n        }\n      }\n      /* Keep content except for bad-listed elements */\n      if (KEEP_CONTENT && !FORBID_CONTENTS[tagName]) {\n        const parentNode = getParentNode(currentNode) || currentNode.parentNode;\n        const childNodes = getChildNodes(currentNode) || currentNode.childNodes;\n        if (childNodes && parentNode) {\n          const childCount = childNodes.length;\n          for (let i = childCount - 1; i >= 0; --i) {\n            const childClone = cloneNode(childNodes[i], true);\n            childClone.__removalCount = (currentNode.__removalCount || 0) + 1;\n            parentNode.insertBefore(childClone, getNextSibling(currentNode));\n          }\n        }\n      }\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Check whether element has a valid namespace */\n    if (currentNode instanceof Element && !_checkValidNamespace(currentNode)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Make sure that older browsers don't get fallback-tag mXSS */\n    if ((tagName === 'noscript' || tagName === 'noembed' || tagName === 'noframes') && regExpTest(/<\\/no(script|embed|frames)/i, currentNode.innerHTML)) {\n      _forceRemove(currentNode);\n      return true;\n    }\n    /* Sanitize element content to be template-safe */\n    if (SAFE_FOR_TEMPLATES && currentNode.nodeType === NODE_TYPE.text) {\n      /* Get the element's text content */\n      content = currentNode.textContent;\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        content = stringReplace(content, expr, ' ');\n      });\n      if (currentNode.textContent !== content) {\n        arrayPush(DOMPurify.removed, {\n          element: currentNode.cloneNode()\n        });\n        currentNode.textContent = content;\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeElements, currentNode, null);\n    return false;\n  };\n  /**\n   * _isValidAttribute\n   *\n   * @param lcTag Lowercase tag name of containing element.\n   * @param lcName Lowercase attribute name.\n   * @param value Attribute value.\n   * @return Returns true if `value` is valid, otherwise false.\n   */\n  // eslint-disable-next-line complexity\n  const _isValidAttribute = function _isValidAttribute(lcTag, lcName, value) {\n    /* Make sure attribute cannot clobber */\n    if (SANITIZE_DOM && (lcName === 'id' || lcName === 'name') && (value in document || value in formElement)) {\n      return false;\n    }\n    /* Allow valid data-* attributes: At least one character after \"-\"\n        (https://html.spec.whatwg.org/multipage/dom.html#embedding-custom-non-visible-data-with-the-data-*-attributes)\n        XML-compatible (https://html.spec.whatwg.org/multipage/infrastructure.html#xml-compatible and http://www.w3.org/TR/xml/#d0e804)\n        We don't need to check the value; it's always URI safe. */\n    if (ALLOW_DATA_ATTR && !FORBID_ATTR[lcName] && regExpTest(DATA_ATTR, lcName)) ; else if (ALLOW_ARIA_ATTR && regExpTest(ARIA_ATTR, lcName)) ; else if (!ALLOWED_ATTR[lcName] || FORBID_ATTR[lcName]) {\n      if (\n      // First condition does a very basic check if a) it's basically a valid custom element tagname AND\n      // b) if the tagName passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      // and c) if the attribute name passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.attributeNameCheck\n      _isBasicCustomElement(lcTag) && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, lcTag) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(lcTag)) && (CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.attributeNameCheck, lcName) || CUSTOM_ELEMENT_HANDLING.attributeNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.attributeNameCheck(lcName)) ||\n      // Alternative, second condition checks if it's an `is`-attribute, AND\n      // the value passes whatever the user has configured for CUSTOM_ELEMENT_HANDLING.tagNameCheck\n      lcName === 'is' && CUSTOM_ELEMENT_HANDLING.allowCustomizedBuiltInElements && (CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof RegExp && regExpTest(CUSTOM_ELEMENT_HANDLING.tagNameCheck, value) || CUSTOM_ELEMENT_HANDLING.tagNameCheck instanceof Function && CUSTOM_ELEMENT_HANDLING.tagNameCheck(value))) ; else {\n        return false;\n      }\n      /* Check value is safe. First, is attr inert? If so, is safe */\n    } else if (URI_SAFE_ATTRIBUTES[lcName]) ; else if (regExpTest(IS_ALLOWED_URI$1, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if ((lcName === 'src' || lcName === 'xlink:href' || lcName === 'href') && lcTag !== 'script' && stringIndexOf(value, 'data:') === 0 && DATA_URI_TAGS[lcTag]) ; else if (ALLOW_UNKNOWN_PROTOCOLS && !regExpTest(IS_SCRIPT_OR_DATA, stringReplace(value, ATTR_WHITESPACE, ''))) ; else if (value) {\n      return false;\n    } else ;\n    return true;\n  };\n  /**\n   * _isBasicCustomElement\n   * checks if at least one dash is included in tagName, and it's not the first char\n   * for more sophisticated checking see https://github.com/sindresorhus/validate-element-name\n   *\n   * @param tagName name of the tag of the node to sanitize\n   * @returns Returns true if the tag name meets the basic criteria for a custom element, otherwise false.\n   */\n  const _isBasicCustomElement = function _isBasicCustomElement(tagName) {\n    return tagName !== 'annotation-xml' && stringMatch(tagName, CUSTOM_ELEMENT);\n  };\n  /**\n   * _sanitizeAttributes\n   *\n   * @protect attributes\n   * @protect nodeName\n   * @protect removeAttribute\n   * @protect setAttribute\n   *\n   * @param currentNode to sanitize\n   */\n  const _sanitizeAttributes = function _sanitizeAttributes(currentNode) {\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeAttributes, currentNode, null);\n    const {\n      attributes\n    } = currentNode;\n    /* Check if we have attributes; if not we might have a text node */\n    if (!attributes || _isClobbered(currentNode)) {\n      return;\n    }\n    const hookEvent = {\n      attrName: '',\n      attrValue: '',\n      keepAttr: true,\n      allowedAttributes: ALLOWED_ATTR,\n      forceKeepAttr: undefined\n    };\n    let l = attributes.length;\n    /* Go backwards over all attributes; safely remove bad ones */\n    while (l--) {\n      const attr = attributes[l];\n      const {\n        name,\n        namespaceURI,\n        value: attrValue\n      } = attr;\n      const lcName = transformCaseFunc(name);\n      const initValue = attrValue;\n      let value = name === 'value' ? initValue : stringTrim(initValue);\n      /* Execute a hook if present */\n      hookEvent.attrName = lcName;\n      hookEvent.attrValue = value;\n      hookEvent.keepAttr = true;\n      hookEvent.forceKeepAttr = undefined; // Allows developers to see this is a property they can set\n      _executeHooks(hooks.uponSanitizeAttribute, currentNode, hookEvent);\n      value = hookEvent.attrValue;\n      /* Full DOM Clobbering protection via namespace isolation,\n       * Prefix id and name attributes with `user-content-`\n       */\n      if (SANITIZE_NAMED_PROPS && (lcName === 'id' || lcName === 'name')) {\n        // Remove the attribute with this value\n        _removeAttribute(name, currentNode);\n        // Prefix the value and later re-create the attribute with the sanitized value\n        value = SANITIZE_NAMED_PROPS_PREFIX + value;\n      }\n      /* Work around a security issue with comments inside attributes */\n      if (SAFE_FOR_XML && regExpTest(/((--!?|])>)|<\\/(style|title)/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (hookEvent.forceKeepAttr) {\n        continue;\n      }\n      /* Did the hooks approve of the attribute? */\n      if (!hookEvent.keepAttr) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Work around a security issue in jQuery 3.0 */\n      if (!ALLOW_SELF_CLOSE_IN_ATTR && regExpTest(/\\/>/i, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Sanitize attribute content to be template-safe */\n      if (SAFE_FOR_TEMPLATES) {\n        arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n          value = stringReplace(value, expr, ' ');\n        });\n      }\n      /* Is `value` valid for this attribute? */\n      const lcTag = transformCaseFunc(currentNode.nodeName);\n      if (!_isValidAttribute(lcTag, lcName, value)) {\n        _removeAttribute(name, currentNode);\n        continue;\n      }\n      /* Handle attributes that require Trusted Types */\n      if (trustedTypesPolicy && typeof trustedTypes === 'object' && typeof trustedTypes.getAttributeType === 'function') {\n        if (namespaceURI) ; else {\n          switch (trustedTypes.getAttributeType(lcTag, lcName)) {\n            case 'TrustedHTML':\n              {\n                value = trustedTypesPolicy.createHTML(value);\n                break;\n              }\n            case 'TrustedScriptURL':\n              {\n                value = trustedTypesPolicy.createScriptURL(value);\n                break;\n              }\n          }\n        }\n      }\n      /* Handle invalid data-* attribute set by try-catching it */\n      if (value !== initValue) {\n        try {\n          if (namespaceURI) {\n            currentNode.setAttributeNS(namespaceURI, name, value);\n          } else {\n            /* Fallback to setAttribute() for browser-unrecognized namespaces e.g. \"x-schema\". */\n            currentNode.setAttribute(name, value);\n          }\n          if (_isClobbered(currentNode)) {\n            _forceRemove(currentNode);\n          } else {\n            arrayPop(DOMPurify.removed);\n          }\n        } catch (_) {\n          _removeAttribute(name, currentNode);\n        }\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeAttributes, currentNode, null);\n  };\n  /**\n   * _sanitizeShadowDOM\n   *\n   * @param fragment to iterate over recursively\n   */\n  const _sanitizeShadowDOM = function _sanitizeShadowDOM(fragment) {\n    let shadowNode = null;\n    const shadowIterator = _createNodeIterator(fragment);\n    /* Execute a hook if present */\n    _executeHooks(hooks.beforeSanitizeShadowDOM, fragment, null);\n    while (shadowNode = shadowIterator.nextNode()) {\n      /* Execute a hook if present */\n      _executeHooks(hooks.uponSanitizeShadowNode, shadowNode, null);\n      /* Sanitize tags and elements */\n      _sanitizeElements(shadowNode);\n      /* Check attributes next */\n      _sanitizeAttributes(shadowNode);\n      /* Deep shadow DOM detected */\n      if (shadowNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(shadowNode.content);\n      }\n    }\n    /* Execute a hook if present */\n    _executeHooks(hooks.afterSanitizeShadowDOM, fragment, null);\n  };\n  // eslint-disable-next-line complexity\n  DOMPurify.sanitize = function (dirty) {\n    let cfg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let body = null;\n    let importedNode = null;\n    let currentNode = null;\n    let returnNode = null;\n    /* Make sure we have a string to sanitize.\n      DO NOT return early, as this will return the wrong type if\n      the user has requested a DOM object rather than a string */\n    IS_EMPTY_INPUT = !dirty;\n    if (IS_EMPTY_INPUT) {\n      dirty = '<!-->';\n    }\n    /* Stringify, in case dirty is an object */\n    if (typeof dirty !== 'string' && !_isNode(dirty)) {\n      if (typeof dirty.toString === 'function') {\n        dirty = dirty.toString();\n        if (typeof dirty !== 'string') {\n          throw typeErrorCreate('dirty is not a string, aborting');\n        }\n      } else {\n        throw typeErrorCreate('toString is not a function');\n      }\n    }\n    /* Return dirty HTML if DOMPurify cannot run */\n    if (!DOMPurify.isSupported) {\n      return dirty;\n    }\n    /* Assign config vars */\n    if (!SET_CONFIG) {\n      _parseConfig(cfg);\n    }\n    /* Clean up removed elements */\n    DOMPurify.removed = [];\n    /* Check if dirty is correctly typed for IN_PLACE */\n    if (typeof dirty === 'string') {\n      IN_PLACE = false;\n    }\n    if (IN_PLACE) {\n      /* Do some early pre-sanitization to avoid unsafe root nodes */\n      if (dirty.nodeName) {\n        const tagName = transformCaseFunc(dirty.nodeName);\n        if (!ALLOWED_TAGS[tagName] || FORBID_TAGS[tagName]) {\n          throw typeErrorCreate('root node is forbidden and cannot be sanitized in-place');\n        }\n      }\n    } else if (dirty instanceof Node) {\n      /* If dirty is a DOM element, append to an empty document to avoid\n         elements being stripped by the parser */\n      body = _initDocument('<!---->');\n      importedNode = body.ownerDocument.importNode(dirty, true);\n      if (importedNode.nodeType === NODE_TYPE.element && importedNode.nodeName === 'BODY') {\n        /* Node is already a body, use as is */\n        body = importedNode;\n      } else if (importedNode.nodeName === 'HTML') {\n        body = importedNode;\n      } else {\n        // eslint-disable-next-line unicorn/prefer-dom-node-append\n        body.appendChild(importedNode);\n      }\n    } else {\n      /* Exit directly if we have nothing to do */\n      if (!RETURN_DOM && !SAFE_FOR_TEMPLATES && !WHOLE_DOCUMENT &&\n      // eslint-disable-next-line unicorn/prefer-includes\n      dirty.indexOf('<') === -1) {\n        return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(dirty) : dirty;\n      }\n      /* Initialize the document to work on */\n      body = _initDocument(dirty);\n      /* Check we have a DOM node from the data */\n      if (!body) {\n        return RETURN_DOM ? null : RETURN_TRUSTED_TYPE ? emptyHTML : '';\n      }\n    }\n    /* Remove first element node (ours) if FORCE_BODY is set */\n    if (body && FORCE_BODY) {\n      _forceRemove(body.firstChild);\n    }\n    /* Get node iterator */\n    const nodeIterator = _createNodeIterator(IN_PLACE ? dirty : body);\n    /* Now start iterating over the created document */\n    while (currentNode = nodeIterator.nextNode()) {\n      /* Sanitize tags and elements */\n      _sanitizeElements(currentNode);\n      /* Check attributes next */\n      _sanitizeAttributes(currentNode);\n      /* Shadow DOM detected, sanitize it */\n      if (currentNode.content instanceof DocumentFragment) {\n        _sanitizeShadowDOM(currentNode.content);\n      }\n    }\n    /* If we sanitized `dirty` in-place, return it. */\n    if (IN_PLACE) {\n      return dirty;\n    }\n    /* Return sanitized string or DOM */\n    if (RETURN_DOM) {\n      if (RETURN_DOM_FRAGMENT) {\n        returnNode = createDocumentFragment.call(body.ownerDocument);\n        while (body.firstChild) {\n          // eslint-disable-next-line unicorn/prefer-dom-node-append\n          returnNode.appendChild(body.firstChild);\n        }\n      } else {\n        returnNode = body;\n      }\n      if (ALLOWED_ATTR.shadowroot || ALLOWED_ATTR.shadowrootmode) {\n        /*\n          AdoptNode() is not used because internal state is not reset\n          (e.g. the past names map of a HTMLFormElement), this is safe\n          in theory but we would rather not risk another attack vector.\n          The state that is cloned by importNode() is explicitly defined\n          by the specs.\n        */\n        returnNode = importNode.call(originalDocument, returnNode, true);\n      }\n      return returnNode;\n    }\n    let serializedHTML = WHOLE_DOCUMENT ? body.outerHTML : body.innerHTML;\n    /* Serialize doctype if allowed */\n    if (WHOLE_DOCUMENT && ALLOWED_TAGS['!doctype'] && body.ownerDocument && body.ownerDocument.doctype && body.ownerDocument.doctype.name && regExpTest(DOCTYPE_NAME, body.ownerDocument.doctype.name)) {\n      serializedHTML = '<!DOCTYPE ' + body.ownerDocument.doctype.name + '>\\n' + serializedHTML;\n    }\n    /* Sanitize final string template-safe */\n    if (SAFE_FOR_TEMPLATES) {\n      arrayForEach([MUSTACHE_EXPR, ERB_EXPR, TMPLIT_EXPR], expr => {\n        serializedHTML = stringReplace(serializedHTML, expr, ' ');\n      });\n    }\n    return trustedTypesPolicy && RETURN_TRUSTED_TYPE ? trustedTypesPolicy.createHTML(serializedHTML) : serializedHTML;\n  };\n  DOMPurify.setConfig = function () {\n    let cfg = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _parseConfig(cfg);\n    SET_CONFIG = true;\n  };\n  DOMPurify.clearConfig = function () {\n    CONFIG = null;\n    SET_CONFIG = false;\n  };\n  DOMPurify.isValidAttribute = function (tag, attr, value) {\n    /* Initialize shared config vars if necessary. */\n    if (!CONFIG) {\n      _parseConfig({});\n    }\n    const lcTag = transformCaseFunc(tag);\n    const lcName = transformCaseFunc(attr);\n    return _isValidAttribute(lcTag, lcName, value);\n  };\n  DOMPurify.addHook = function (entryPoint, hookFunction) {\n    if (typeof hookFunction !== 'function') {\n      return;\n    }\n    arrayPush(hooks[entryPoint], hookFunction);\n  };\n  DOMPurify.removeHook = function (entryPoint, hookFunction) {\n    if (hookFunction !== undefined) {\n      const index = arrayLastIndexOf(hooks[entryPoint], hookFunction);\n      return index === -1 ? undefined : arraySplice(hooks[entryPoint], index, 1)[0];\n    }\n    return arrayPop(hooks[entryPoint]);\n  };\n  DOMPurify.removeHooks = function (entryPoint) {\n    hooks[entryPoint] = [];\n  };\n  DOMPurify.removeAllHooks = function () {\n    hooks = _createHooksMap();\n  };\n  return DOMPurify;\n}\nvar purify = createDOMPurify();\n\nexport { purify as default };\n//# sourceMappingURL=purify.es.mjs.map\n","import { render } from \"./ReportTemplate.vue?vue&type=template&id=b39e53d0&scoped=true\"\nimport script from \"./ReportTemplate.vue?vue&type=script&lang=js\"\nexport * from \"./ReportTemplate.vue?vue&type=script&lang=js\"\n\nimport \"./ReportTemplate.vue?vue&type=style&index=0&id=b39e53d0&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-b39e53d0\"]])\n\nexport default __exports__"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","class","type","createNewTemplate","importTemplate","exportAllTemplates","ref","style","accept","handleFileImport","templates","template","isDefault","key","name","effect","content","placement","circle","exportTemplate","editTemplate","setAsDefault","deleteTemplate","preview","created","editorVisible","title","editorTitle","width","footer","saveTemplate","currentTemplate","placeholder","makeBold","makeItalic","makeUnderline","makeUnorderedList","makeOrderedList","insertLink","insertImage","selectedSection","sections","section","value","label","plain","insertSection","renderedContent","_getDefaults","async","breaks","extensions","gfm","hooks","pedantic","renderer","silent","tokenizer","walkTokens","_defaults","changeDefaults","newDefaults","escapeTest","escapeReplace","RegExp","source","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","html","encode","test","replace","unescapeTest","_","n","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","obj","val","getRegex","cleanUrl","href","encodeURI","noopTest","exec","splitCells","tableRow","count","row","match","offset","str","escaped","curr","cells","split","i","trim","shift","length","pop","splice","push","rtrim","c","invert","l","suffLen","currChar","slice","findClosingBracket","b","indexOf","level","outputLink","cap","link","raw","lexer","text","state","inLink","token","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","node","matchIndentInNode","indentInNode","join","_Tokenizer","options","rules","constructor","this","space","src","block","newline","codeBlockStyle","fences","lang","inline","_escapes","heading","trimmed","depth","hr","blockquote","top","blockTokens","list","bull","isordered","ordered","start","loose","items","itemRegex","itemContents","endsWithBlankLine","endEarly","line","t","repeat","nextLine","indent","trimStart","search","blankLine","nextBulletRegex","Math","min","hrRegex","fencesBeginRegex","headingBeginRegex","rawLine","ischecked","istask","task","checked","trimEnd","spacers","filter","hasMultipleLineBreaks","some","pre","def","tag","table","item","header","align","rows","j","k","lheading","paragraph","escape","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","lastCharLength","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","_punctuation","blockSkip","anyPunctuation","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","_Lexer","inlineQueue","create","lex","lexInline","next","lastToken","cutSrc","lastParagraphClipped","leading","tabs","extTokenizer","call","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","charCodeAt","console","error","keepPrevChar","includes","lastIndexOf","startInline","_Renderer","infostring","quote","body","startatt","listitem","checkbox","tablerow","tablecell","flags","cleanHref","out","image","_TextRenderer","_Parser","textRenderer","parse","parser","parseInline","renderers","genericToken","ret","headingToken","codeToken","tableToken","cell","blockquoteToken","listToken","itemBody","unshift","htmlToken","paragraphToken","textToken","escapeToken","tagToken","linkToken","imageToken","strongToken","emToken","codespanToken","delToken","_Hooks","static","Set","preprocess","markdown","postprocess","Marked","defaults","setOptions","Parser","Renderer","TextRenderer","Lexer","Tokenizer","Hooks","args","use","callback","values","concat","childTokens","pack","opts","ext","prevRenderer","apply","extLevel","prop","rendererFunc","rendererKey","tokenizerFunc","tokenizerKey","prevTokenizer","hooksFunc","hooksKey","prevHook","passThroughHooks","has","arg","Promise","then","packWalktokens","origOpt","warn","throwError","prototype","toString","all","catch","message","msg","reject","markedInstance","marked","getDefaults","entries","setPrototypeOf","isFrozen","getPrototypeOf","getOwnPropertyDescriptor","freeze","seal","construct","Reflect","x","fun","thisValue","Func","arrayForEach","unapply","Array","arrayLastIndexOf","arrayPop","arrayPush","arraySplice","stringToLowerCase","stringToString","stringMatch","stringReplace","stringIndexOf","stringTrim","objectHasOwnProperty","hasOwnProperty","regExpTest","typeErrorCreate","unconstruct","TypeError","func","thisArg","_len","arguments","_key","_len2","_key2","addToSet","set","array","transformCaseFunc","undefined","element","lcElement","cleanArray","isPropertyExist","clone","object","newObject","property","isArray","lookupGetter","desc","get","fallbackValue","html$1","svg$1","svgFilters","svgDisallowed","mathMl$1","mathMlDisallowed","svg","mathMl","xml","MUSTACHE_EXPR","ERB_EXPR","TMPLIT_EXPR","DATA_ATTR","ARIA_ATTR","IS_ALLOWED_URI","IS_SCRIPT_OR_DATA","ATTR_WHITESPACE","DOCTYPE_NAME","CUSTOM_ELEMENT","EXPRESSIONS","__proto__","NODE_TYPE","attribute","cdataSection","entityReference","entityNode","progressingInstruction","comment","document","documentType","documentFragment","notation","getGlobal","window","_createTrustedTypesPolicy","trustedTypes","purifyHostElement","createPolicy","suffix","ATTR_NAME","hasAttribute","getAttribute","policyName","createHTML","createScriptURL","scriptUrl","_createHooksMap","afterSanitizeAttributes","afterSanitizeElements","afterSanitizeShadowDOM","beforeSanitizeAttributes","beforeSanitizeElements","beforeSanitizeShadowDOM","uponSanitizeAttribute","uponSanitizeElement","uponSanitizeShadowNode","createDOMPurify","DOMPurify","root","version","removed","nodeType","Element","isSupported","originalDocument","currentScript","DocumentFragment","HTMLTemplateElement","Node","NodeFilter","NamedNodeMap","MozNamedAttrMap","HTMLFormElement","DOMParser","ElementPrototype","cloneNode","remove","getNextSibling","getChildNodes","getParentNode","createElement","ownerDocument","trustedTypesPolicy","emptyHTML","implementation","createNodeIterator","createDocumentFragment","getElementsByTagName","importNode","createHTMLDocument","IS_ALLOWED_URI$1","ALLOWED_TAGS","DEFAULT_ALLOWED_TAGS","ALLOWED_ATTR","DEFAULT_ALLOWED_ATTR","CUSTOM_ELEMENT_HANDLING","tagNameCheck","writable","configurable","enumerable","attributeNameCheck","allowCustomizedBuiltInElements","FORBID_TAGS","FORBID_ATTR","ALLOW_ARIA_ATTR","ALLOW_DATA_ATTR","ALLOW_UNKNOWN_PROTOCOLS","ALLOW_SELF_CLOSE_IN_ATTR","SAFE_FOR_TEMPLATES","SAFE_FOR_XML","WHOLE_DOCUMENT","SET_CONFIG","FORCE_BODY","RETURN_DOM","RETURN_DOM_FRAGMENT","RETURN_TRUSTED_TYPE","SANITIZE_DOM","SANITIZE_NAMED_PROPS","SANITIZE_NAMED_PROPS_PREFIX","KEEP_CONTENT","IN_PLACE","USE_PROFILES","FORBID_CONTENTS","DEFAULT_FORBID_CONTENTS","DATA_URI_TAGS","DEFAULT_DATA_URI_TAGS","URI_SAFE_ATTRIBUTES","DEFAULT_URI_SAFE_ATTRIBUTES","MATHML_NAMESPACE","SVG_NAMESPACE","HTML_NAMESPACE","NAMESPACE","IS_EMPTY_INPUT","ALLOWED_NAMESPACES","DEFAULT_ALLOWED_NAMESPACES","MATHML_TEXT_INTEGRATION_POINTS","HTML_INTEGRATION_POINTS","COMMON_SVG_AND_HTML_ELEMENTS","PARSER_MEDIA_TYPE","SUPPORTED_PARSER_MEDIA_TYPES","DEFAULT_PARSER_MEDIA_TYPE","CONFIG","formElement","isRegexOrFunction","testValue","Function","_parseConfig","cfg","ADD_URI_SAFE_ATTR","ADD_DATA_URI_TAGS","ALLOWED_URI_REGEXP","ADD_TAGS","ADD_ATTR","tbody","TRUSTED_TYPES_POLICY","ALL_SVG_TAGS","ALL_MATHML_TAGS","_checkValidNamespace","parent","tagName","namespaceURI","parentTagName","Boolean","_forceRemove","removeChild","_removeAttribute","getAttributeNode","from","removeAttribute","setAttribute","_initDocument","dirty","doc","leadingWhitespace","matches","dirtyPayload","parseFromString","documentElement","createDocument","innerHTML","insertBefore","createTextNode","childNodes","_createNodeIterator","SHOW_ELEMENT","SHOW_COMMENT","SHOW_TEXT","SHOW_PROCESSING_INSTRUCTION","SHOW_CDATA_SECTION","_isClobbered","nodeName","textContent","attributes","hasChildNodes","_isNode","_executeHooks","currentNode","data","hook","_sanitizeElements","allowedTags","firstElementChild","_isBasicCustomElement","parentNode","childCount","childClone","__removalCount","expr","_isValidAttribute","lcTag","lcName","_sanitizeAttributes","hookEvent","attrName","attrValue","keepAttr","allowedAttributes","forceKeepAttr","attr","initValue","getAttributeType","setAttributeNS","_sanitizeShadowDOM","fragment","shadowNode","shadowIterator","nextNode","sanitize","importedNode","returnNode","appendChild","firstChild","nodeIterator","shadowroot","shadowrootmode","serializedHTML","outerHTML","doctype","setConfig","clearConfig","isValidAttribute","addHook","entryPoint","hookFunction","removeHook","removeHooks","removeAllHooks","purify","setup","loading","fileInput","generatePreview","Date","toLocaleDateString","loadTemplates","templateContext","now","random","substr","markdownTextarea","wrapSelection","before","after","el","selectionStart","end","selectionEnd","original","selectedText","newText","focus","prependLines","prefixCb","beforeSel","sel","afterSel","lines","newLines","idx","prompt","sectionSnippets","summary","vulnerabilities","recommendations","risk_levels","compliance","executive_summary","warning","snippet","resetCurrentTemplate","tpl","assign","findIndex","success","confirm","confirmButtonText","cancelButtonText","JSON","stringify","blob","Blob","URL","createObjectURL","a","download","click","setTimeout","revokeObjectURL","toISOString","event","file","target","files","reader","FileReader","onload","result","importedTemplates","templatesToImport","importedCount","newId","readAsText","__exports__","render"],"sourceRoot":""}